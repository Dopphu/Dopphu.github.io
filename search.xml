<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Cplusplus位域</title>
    <url>/2020/08/06/Cplusplus%E4%BD%8D%E5%9F%9F/</url>
    <content><![CDATA[<h1 id="位域"><a href="#位域" class="headerlink" title="位域"></a>位域</h1><p><img src="https://wx1.sbimg.cn/2020/08/06/o6NMl.png" alt="o6NMl.png"></p>
<p>课本截图，感jio说的很详细了。</p>
<p><strong>$</strong> 用个例子感受一下。</p>
<p>例子：设计一个结构体存储学生的成绩信息，需要包栝学号，年级和成绩3项内容，学号的范围是0-99 999 999，年级分为：freshman，sophomore，junior，senior四种，成绩包栝A，B，C，D四个等级。</p>
<p>分析：</p>
<ol>
<li><p>不使用位域：</p>
<p>学号用整型4个字节，分别用枚举储存年级和等级（各至少占一个字节）。则共计：6字节</p>
</li>
<li><p>使用位域：</p>
<p>学号要27个二进制位（2<sup>27</sup> = 134 217 728)的有效信息，而年级、成绩各需要两位二进制数就可以了。则共计：4个字节（即可存下）</p>
</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> Level &#123;</span><br><span class="line">	PRESHMAN, SOPHOMORE, JUNOR, SENIOR</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">enum</span> Grade &#123;</span><br><span class="line">	A, B, C, D</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> &#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		Student(<span class="keyword">unsigned</span> <span class="keyword">int</span> number, Level level, Grade grade)</span><br><span class="line">		:number(number), level(level), grade(grade) &#123;&#125;</span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="keyword">unsigned</span> number: <span class="number">27</span>;</span><br><span class="line">		Level level : <span class="number">2</span>;</span><br><span class="line">		Grade grade : <span class="number">2</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student::show</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Number:"</span>&lt;&lt;number&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Level:    "</span>;</span><br><span class="line">	<span class="keyword">switch</span>(level)&#123;</span><br><span class="line">		<span class="keyword">case</span> PRESHMAN:</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"freshman"</span>;<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> SOPHOMORE:</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"sophomore"</span>;<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> JUNOR:</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"junior"</span>;<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> SENIOR:</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"senior"</span>;<span class="keyword">break</span>; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Grade:    "</span>;</span><br><span class="line">	<span class="keyword">switch</span>(grade)&#123;</span><br><span class="line">		<span class="keyword">case</span> A:</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"A"</span>;<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> B:</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"B"</span>;<span class="keyword">break</span>; </span><br><span class="line">		<span class="keyword">case</span> C:</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"C"</span>;<span class="keyword">break</span>; </span><br><span class="line">		<span class="keyword">case</span> D:</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">"D"</span>;<span class="keyword">break</span>;  </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="function">Student <span class="title">s</span><span class="params">(<span class="number">123564</span>, SOPHOMORE, C)</span></span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Size of Student:"</span>&lt;&lt;<span class="keyword">sizeof</span>(Student)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	s.show();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<p><img src="https://wx2.sbimg.cn/2020/08/06/o6FCd.png" alt="o6FCd.png"></p>
<p>不同编译器第一行的结果可能不同。</p>
<p><strong>$</strong> 再放一张课本截图吧。</p>
<p><img src="https://wx1.sbimg.cn/2020/08/06/o6ylU.png" alt="o6ylU.png"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++对象</tag>
      </tags>
  </entry>
  <entry>
    <title>Cplusplus前向声明</title>
    <url>/2020/08/06/Cplusplus%E5%89%8D%E5%90%91%E5%A3%B0%E6%98%8E/</url>
    <content><![CDATA[<h1 id="前向引用声明"><a href="#前向引用声明" class="headerlink" title="前向引用声明"></a>前向引用声明</h1><p><strong>$</strong> 我们知道，C++的类应当先定义再使用。但是处理复杂问题，考虑类的组合时，很可能遇到两个类相互引用的情况，这种情况也成称为循环依赖。例如</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(B b)</span></span>;		<span class="comment">//以B类对象b作为形参的成员函数</span></span><br><span class="line">    					<span class="comment">//这里将引起编译错误，因为“B”为未知符号</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>&#123;</span></span><br><span class="line">  <span class="keyword">public</span>:;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">g</span><span class="params">(A a)</span></span>;		<span class="comment">//以A类对象为形参的成员函数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>由于在使用一个类前，必须先定义该类，因此无论将哪一种类的定义放在前面，都会引起编译错误。加上如下的<strong>前向引用声明</strong>，问题就解决了。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>;</span>				<span class="comment">//前向引用声明</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(B b)</span></span>;		<span class="comment">//以B类对象b作为形参的成员函数</span></span><br><span class="line">    					<span class="comment">//这里将引起编译错误，因为“B”为未知符号</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>&#123;</span></span><br><span class="line">  <span class="keyword">public</span>:;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">g</span><span class="params">(A a)</span></span>;		<span class="comment">//以A类对象为形参的成员函数</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>$</strong> 使用前向引用说明虽然可以解决一些问题，但它并不是万能的。需要注意的是，尽管使用了向前引用声明，<strong>但是在提供一个完整的类定义之前，不能定义该类的对象，也不能在内联成员函数中使用该类的对象。</strong>请看下面的程序：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fred</span>;</span>				<span class="comment">//前向引用说明</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Barney</span>&#123;</span>		</span><br><span class="line">    Fred x;				<span class="comment">//错误：类Fred的定义尚不完善</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fred</span>&#123;</span></span><br><span class="line">  Barney y;  </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>对于这段程序，编译器将指出错误。原因是<strong>对类名Fred的前向引用只能说明Fred是个类名，而不能给出该类的完整定义，因此在类Barney中就不能定义类Fred的数据成员。</strong>因此使两个类以彼此的对象为数据成员，是不合法的。</p>
<p><strong>$</strong> 再看一幅图（直接截图课本）</p>
<p><img src="https://wx2.sbimg.cn/2020/08/06/ooIOU.png" alt="ooIOU.png"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++对象</tag>
      </tags>
  </entry>
  <entry>
    <title>C++复制构造函数</title>
    <url>/2020/08/05/Cplusplus%E5%A4%8D%E5%88%B6%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="复制构造函数"><a href="#复制构造函数" class="headerlink" title="复制构造函数"></a>复制构造函数</h1><p>$ <strong>复制构造函数</strong>是一种特殊的构造函数，具有一般构造函数的所有特性，<strong>其形参是本类的对象的引用。其作用是使用一个已经存在的对象（由复制构造函数的参数指定），去初始化同类的一个新对象。</strong></p>
<p>$ <strong>隐含的复制构造函数</strong>：如果程序员没有定义类的复制构造函数，系统就会在必要时自动生成一个隐含的复制构造函数。<strong>这个隐含的构造函数会把初始值对象的每个数据成员的值都复制到新建立的对象中。</strong>（即完全拥有相同的属性。）</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		Point(<span class="keyword">int</span> xx=<span class="number">0</span>, <span class="keyword">int</span> yy=<span class="number">0</span>)&#123;</span><br><span class="line">			x = xx;</span><br><span class="line">			y = yy;</span><br><span class="line">		&#125;</span><br><span class="line">		Point(Point &amp;p);</span><br><span class="line">		<span class="function"><span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span></span>&#123;</span><br><span class="line">			<span class="keyword">return</span> x;		</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span></span>&#123;</span><br><span class="line">			<span class="keyword">return</span> y;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="keyword">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line">Point::Point(Point &amp;p)&#123;</span><br><span class="line">	x = p.x;</span><br><span class="line">	y = p.y;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Calling the copy constructor"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">(Point p)</span></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;p.getX()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Point <span class="title">func2</span><span class="params">()</span></span>&#123;</span><br><span class="line">	Point a;</span><br><span class="line">	<span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="function">Point <span class="title">a</span><span class="params">(<span class="number">4</span>,<span class="number">5</span>)</span></span>;</span><br><span class="line">	Point b = a;		<span class="comment">//情况一：用a初始化b。 </span></span><br><span class="line">	<span class="function">Point <span class="title">c</span><span class="params">(b)</span></span>;			<span class="comment">//同样是情况一，用一个对象初始化另一个对象时调用复制构造函数。 </span></span><br><span class="line">	</span><br><span class="line">	func1(a);			<span class="comment">//情况二：函数的形参为类的对象，当调用函数时（形实结合）,复制构造函数被调用。 </span></span><br><span class="line">	</span><br><span class="line">	c = func2();		<span class="comment">//情况三，当函数返回值是类的对象时，函数返回时，调用复制构造函数。 </span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;b.getX()&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><img src="https://wx1.sbimg.cn/2020/08/04/PfH5k.png" alt="PfH5k.png"></p>
<p><strong>关于情况三</strong>：我用的Dev c++（忘了哪个版本了），运行结果显示并没有调用构造函数。书本是这么说的：</p>
<p><img src="https://wx1.sbimg.cn/2020/08/05/o0M82.png" alt="o0M82.png"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++对象</tag>
      </tags>
  </entry>
  <entry>
    <title>Cplusplus析构函数</title>
    <url>/2020/08/06/Cplusplus%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h1><p><strong>$</strong> 析构函数与构造函数的作用几乎正好相反，它是用来完成对象被删除前的一些清理工作。<strong>析构函数是在对象的生存周期即将结束的时刻被自动调用的。</strong>它的调用完成之后对象也就消失了，相应的内存空间也会被释放。</p>
<p><img src="https://wx1.sbimg.cn/2020/08/05/oCOg6.png" alt="oCOg6.png"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span>&#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		Clock();		<span class="comment">//构造函数</span></span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">setTime</span><span class="params">(<span class="keyword">int</span> newH, <span class="keyword">int</span> newM, <span class="keyword">int</span> newS)</span></span>;</span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">showTime</span><span class="params">()</span></span>;</span><br><span class="line">		~Clock&#123;&#125;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="keyword">int</span> hour, minute, second; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++对象</tag>
      </tags>
  </entry>
  <entry>
    <title>Cplusplus类的组合</title>
    <url>/2020/08/06/Cplusplus%E7%B1%BB%E7%9A%84%E7%BB%84%E5%90%88/</url>
    <content><![CDATA[<h1 id="类的组合"><a href="#类的组合" class="headerlink" title="类的组合"></a>类的组合</h1><p>$ <strong>类的组合描述的就是一个类内嵌其它类的对象作为成员的情况，它们之间是一种包含与被包含的关系。</strong>例如，用一个类来描述计算机系统，首先可以把它分解为硬件和软件，而硬件包含…，软件又包含…，这些部分每一个都能进行进一步的分解，用类的观点来描述，它就是一个类的组合。</p>
<p><img src="https://wx1.sbimg.cn/2020/08/05/oD61o.png" alt="oD61o.png"></p>
<p><strong>$</strong> <strong>当创建类的对象时，如果这个类具有内嵌对象成员，那么各个内嵌对象将首先被自动创建。</strong>因为部件对象是复杂对象的一部分，因此，<strong>在创建对象时既要对本类的基本类型数据成员进行初始化，又要对内嵌对象成员进行初始化。</strong>这时，理解这些对象的构造函数被调用的顺序就很重要。</p>
<p><img src="https://wx2.sbimg.cn/2020/08/05/oDg7U.png" alt="oDg7U.png"></p>
<p><strong>$</strong> 那么当存在类的组合关系时，复制构造函数该如何编写呢？同样，没有编写的话，编译系统会在必要时自动生成一个隐含的复制构造函数，这个隐含的函数会自动调用内嵌对象的复制构造函数，为各个内嵌对象初始化。</p>
<p>自己编写的话，举个例子：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//假设C类中包含B类的对象b作为成员，C类的复制构造函数形式如下：</span></span><br><span class="line">C::C(C &amp;c1):b(c1.b)&#123;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>$</strong> 用一个例子来理解一下复制构造函数，构造函数的调用顺序吧。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		Point(<span class="keyword">int</span> xx = <span class="number">0</span>, <span class="keyword">int</span> yy = <span class="number">0</span>)&#123;</span><br><span class="line">			x = xx;</span><br><span class="line">			y = yy;</span><br><span class="line">		&#125;</span><br><span class="line">		Point(Point &amp;p);</span><br><span class="line">		<span class="function"><span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span></span>&#123;</span><br><span class="line">			<span class="keyword">return</span> x;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span></span>&#123;</span><br><span class="line">			<span class="keyword">return</span> y;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="keyword">int</span> x, y;</span><br><span class="line">&#125;;</span><br><span class="line">Point::Point(Point &amp;p)&#123;		<span class="comment">//复制构造函数的实现 </span></span><br><span class="line">	x = p.x;</span><br><span class="line">	y = p.y;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Calling the copy constructor of Point"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类的组合</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Line</span>&#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		Line(Point xp1, Point xp2);</span><br><span class="line">		Line(Line &amp;l);</span><br><span class="line">		<span class="function"><span class="keyword">double</span> <span class="title">getLen</span><span class="params">()</span></span>&#123;</span><br><span class="line">			<span class="keyword">return</span> len;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		Point p1, p2;</span><br><span class="line">		<span class="keyword">double</span> len;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="comment">//组合类的构造函数</span></span><br><span class="line">Line::Line(Point xp1, Point xp2):p1(xp1), p2(xp2)&#123;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Calling constructor of Line"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="comment">//static_cast&lt;double&gt;(...)强制类型转换 </span></span><br><span class="line">	<span class="keyword">double</span> x = <span class="keyword">static_cast</span>&lt;<span class="keyword">double</span>&gt;(p1.getX() - p2.getX());</span><br><span class="line">	<span class="keyword">double</span> y = <span class="keyword">static_cast</span>&lt;<span class="keyword">double</span>&gt;(p1.getY() - p2.getY());</span><br><span class="line">	len = <span class="built_in">sqrt</span>(x*x + y*y); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//组合类的复制构造函数</span></span><br><span class="line">Line::Line(Line &amp;l):p1(l.p1), p2(l.p2)&#123;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Calling the copy constructor of Line"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	len = l.len;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//主函数 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	Point myp1(1, 1), myp2(4, 5);</span><br><span class="line">	</span><br><span class="line">	<span class="function">Line <span class="title">line</span><span class="params">(myp1, myp2)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="function">Line <span class="title">line2</span><span class="params">(<span class="built_in">line</span>)</span></span>;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"The length of the line is:"</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">line</span>.getLen()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"The length or the line2 is:"</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;line2.getLen()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><img src="https://wx2.sbimg.cn/2020/08/06/ooXYR.png" alt="ooXYR.png"></p>
<p><strong>me</strong>:<em>形实结合两次Point的构造函数，然后初始化Line的Point数据成员又两次point的构造函数，然后调用Line的构造函数（此时内嵌Point的构造函数已经调用）。接下来的三个复制构造函数就好理解了，不做赘述。</em></p>
<p><img src="https://wx1.sbimg.cn/2020/08/06/oomVI.png" alt="oomVI.png"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C++对象</tag>
      </tags>
  </entry>
  <entry>
    <title>Cplusplus结构体和联合体</title>
    <url>/2020/08/06/Cplusplus%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E8%81%94%E5%90%88%E4%BD%93/</url>
    <content><![CDATA[<h1 id="C-结构体和联合体"><a href="#C-结构体和联合体" class="headerlink" title="C++结构体和联合体"></a>C++结构体和联合体</h1><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><p><img src="https://s1.ax1x.com/2020/08/06/acK6G8.png" alt="acK6G8.png"></p>
<p><img src="https://s1.ax1x.com/2020/08/06/acMksH.png" alt="acMksH.png"></p>
<p>这是关于结构体教材的截图（我觉得已经解决我大部分的疑惑了）。我对于结构体的想法是就当C语言的结构体使用就可以了，需要更复杂的数据结构就用C++的对象就好啦。</p>
<h2 id="联合体"><a href="#联合体" class="headerlink" title="联合体"></a>联合体</h2><p><strong>$</strong> 由于联合体的成员<strong>共用相同的内存单元</strong>，联合体变量中成员同时至多只有一个是有意义的。另外，不同数据单元共用相同内存单元的特性，联合体有下面一些限制。</p>
<ol>
<li>联合体的各个对象成员，不能有自定义的构造函数、自定义的析构函数和重载的赋值运算符，不仅联合体的对象成员不能有这些函数，这些对象的对象成员也不能有，以此类推。</li>
<li>联合体不能继承，因而也不支持包含多态。</li>
</ol>
<p><strong>$</strong> 联合体也可以不声明名称，称为无名联合体。无名联合体没有标记名，只是声明一个成员项的集合，这些成员具有相同的内存地址，可以由成员项的名字直接访问。</p>
<p>例如，声明无名联合体如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">float</span> f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在程序中可以这样使用：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">i = <span class="number">10</span>;</span><br><span class="line">f = <span class="number">2.2</span>;</span><br></pre></td></tr></table></figure>

<p><strong>$</strong> 无名联合体通常用作类或结构体的内嵌成员，下面一个例子辅助理解。</p>
<p>先插一个枚举类型变量的语法</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">enum</span> &#123;</span><br><span class="line">		GRADE, PASS, PERFECT</span><br><span class="line">	&#125;mode;</span><br><span class="line">	mode = GRADE;</span><br><span class="line">	</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        //mode = 1; 如果用这个语句的话会报错，我想mode就是一个只能被GRADE、PASS等赋值的变量 </span></span><br><span class="line"><span class="comment">    	报错内容：</span></span><br><span class="line"><span class="comment">    		[Error] invalid conversion from 'int' to 'main()::&lt;anonymous enum&gt;' [-fpermissive]</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">	i = PASS;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"mode:"</span>&lt;&lt;mode&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="string">"i:"</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>正片开始</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExamInfo</span>&#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		ExamInfo(<span class="built_in">string</span> name, <span class="keyword">char</span> grade):name(name), mode(GRADE), grade(grade)&#123;&#125;</span><br><span class="line">		ExamInfo(<span class="built_in">string</span> name, <span class="keyword">bool</span> pass):name(name), mode(PASS), pass(pass)&#123;&#125;</span><br><span class="line">		ExamInfo(<span class="built_in">string</span> name, <span class="keyword">int</span> percent):name(name), mode(PERCENTAGE), percent(percent)&#123;&#125;</span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="built_in">string</span> name;		<span class="comment">//课程名称</span></span><br><span class="line">		<span class="keyword">enum</span> &#123;</span><br><span class="line">			GRADE, PASS, PERCENTAGE</span><br><span class="line">		&#125;mode;				<span class="comment">//采用何种计分方式</span></span><br><span class="line">		<span class="keyword">union</span>&#123;</span><br><span class="line">			<span class="keyword">char</span> grade;		<span class="comment">//等级制</span></span><br><span class="line">			<span class="keyword">bool</span> pass;		<span class="comment">//是否通过 pass or fail</span></span><br><span class="line">			<span class="keyword">int</span> percent;	<span class="comment">//百分制的成绩</span></span><br><span class="line">		&#125;;</span><br><span class="line">&#125;;	</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ExamInfo::show</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;name&lt;&lt;<span class="string">":"</span>;</span><br><span class="line">	<span class="keyword">switch</span>(mode)&#123;</span><br><span class="line">		<span class="keyword">case</span> GRADE:</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;grade;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> PASS:</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;(pass?<span class="string">"PASS"</span>:<span class="string">"FAIL"</span>);<span class="comment">//这个括号()很关键，我在这栽了。可能是结合性的问题</span></span><br><span class="line">      	<span class="comment">//cout&lt;&lt;pass?"PASS":"FAIL";这样写的话会直接打印出1.我试着把true改为false，结果变成了0。</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> PERCENTAGE:</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;percent;</span><br><span class="line">				<span class="keyword">break</span>;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="function">ExamInfo <span class="title">course1</span><span class="params">(<span class="string">"Math"</span>, <span class="string">'A'</span>)</span></span>;</span><br><span class="line">	<span class="function">ExamInfo <span class="title">course2</span><span class="params">(<span class="string">"P.E"</span>, <span class="literal">true</span>)</span></span>;</span><br><span class="line">	<span class="function">ExamInfo <span class="title">course3</span><span class="params">(<span class="string">"English"</span>, <span class="number">113</span>)</span></span>;</span><br><span class="line">    <span class="comment">//我忘了百分制（113&gt;100），但是不影响理解程序，不好意思。</span></span><br><span class="line">	</span><br><span class="line">	course1.show();</span><br><span class="line">	course2.show();</span><br><span class="line">	course3.show();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>程序执行结果：</p>
<p><img src="https://wx1.sbimg.cn/2020/08/11/oY9bJ.png" alt="oY9bJ.png"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>JS定时器</title>
    <url>/2020/07/20/JS%E5%AE%9A%E6%97%B6%E5%99%A8/</url>
    <content><![CDATA[<h1 id="JavaScript定时器"><a href="#JavaScript定时器" class="headerlink" title="JavaScript定时器"></a>JavaScript定时器</h1><h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><p>格式：<code>setInterval(函数, 毫秒数)</code></p>
<p>功能：每个对应的毫秒数， 执行一次传出的函数</p>
<p>返回值：启动定时器，系统分配的编号</p>
<p><code>clearInterval(Timer)</code>取消定时器</p>
<p>定时器小例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    一般情况下，将没有名字的函数叫做匿名函数。</span></span><br><span class="line"><span class="comment">    var timer  = setInterval(匿名函数, 毫秒数);</span></span><br><span class="line"><span class="comment">    或</span></span><br><span class="line"><span class="comment">    var timer = setInterval(function()&#123;</span></span><br><span class="line"><span class="comment">        执行代码;</span></span><br><span class="line"><span class="comment">    &#125;, 毫秒数)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(i++ + <span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">10</span>)&#123;</span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞let，var，const关键字</title>
    <url>/2020/07/20/JavaScript%E2%98%9Elet%EF%BC%8Cvar%EF%BC%8Cconst%E5%85%B3%E9%94%AE%E5%AD%97/</url>
    <content><![CDATA[<h1 id="JavaScript☞let，var，const关键字"><a href="#JavaScript☞let，var，const关键字" class="headerlink" title="JavaScript☞let，var，const关键字"></a>JavaScript☞let，var，const关键字</h1><p>let关键字是用来声明变量//作用域更加严格</p>
<p>​        【注】let关键字声明的变量所在作用域成为块级作用域</p>
<p>var关键字声明变量，将变量或者形参所在函数大括号作为作用域处理</p>
<p>​        【注】var  局部作用域</p>
<p>const关键字声明不可修改的变量</p>
]]></content>
  </entry>
  <entry>
    <title>JavaScript☞offset系列</title>
    <url>/2020/07/20/JavaScript%E2%98%9Eoffset%E7%B3%BB%E5%88%97/</url>
    <content><![CDATA[<h1 id="JavaScript☞offset系列"><a href="#JavaScript☞offset系列" class="headerlink" title="JavaScript☞offset系列"></a>JavaScript☞offset系列</h1><p><code>offsetWidth</code></p>
<p><code>offsetHeight</code></p>
<p><code>offsetLeft</code></p>
<p><code>offsetRight</code></p>
<p>元素节点的属性。</p>
]]></content>
  </entry>
  <entry>
    <title>JS对象</title>
    <url>/2020/07/20/JS%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="JS对象"><a href="#JS对象" class="headerlink" title="JS对象"></a>JS对象</h1><h2 id="对象的声明"><a href="#对象的声明" class="headerlink" title="对象的声明"></a>对象的声明</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    1.通过new运算符声明对象;</span></span><br><span class="line"><span class="comment">    2.省略new</span></span><br><span class="line"><span class="comment">    3.对象常量赋值 &#123;&#125; （大括号 对象常量）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="built_in">Object</span>();</span><br><span class="line"><span class="keyword">var</span> obj3 = &#123;&#125;;</span><br></pre></td></tr></table></figure>

<p>添加对象方法和属性的例子</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj4 = &#123;</span><br><span class="line">    username:<span class="string">"dopp"</span>,</span><br><span class="line">    <span class="string">"age"</span>:<span class="number">18</span>,</span><br><span class="line">    show:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(obj4.age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">obj4[<span class="string">"show2"</span>] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            alert(obj4.age);</span><br><span class="line">        &#125;;</span><br><span class="line">obj4.show();</span><br><span class="line"><span class="comment">//delete 关键字 删除对象的属性和方法</span></span><br><span class="line"><span class="keyword">delete</span> obj4.age;</span><br><span class="line">alert(obj4.age);<span class="comment">//undefined一些想法</span></span><br></pre></td></tr></table></figure>



<p><strong>一些想法</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    1.发展历史</span></span><br><span class="line"><span class="comment">        编程语言：汇编 C语言 面向过程语言</span></span><br><span class="line"><span class="comment">        编码语言：Java C++ JavaScript Object-C Python 面向对象编程</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    2.思想</span></span><br><span class="line"><span class="comment">        面向过程编程思想：只考虑数学逻辑</span></span><br><span class="line"><span class="comment">        面向对象编程思想：</span></span><br><span class="line"><span class="comment">            1）分析有哪些实体</span></span><br><span class="line"><span class="comment">            2）设计实体的属性和功能</span></span><br><span class="line"><span class="comment">            3）实体之间的相互作用</span></span><br><span class="line"><span class="comment">    3.语法（在JavaScript中没有类这个概念，只有对象，RCMA6版新增了类的概念）</span></span><br><span class="line"><span class="comment">        类：一类具有相同特征的事物的抽象概念</span></span><br><span class="line"><span class="comment">        对象：某一个体或唯一实例</span></span><br><span class="line"><span class="comment">    4.代码</span></span><br><span class="line"><span class="comment">        对象的代码</span></span><br><span class="line"><span class="comment">    5.数据结构</span></span><br><span class="line"><span class="comment">        基本数据类型（单个数据） =&gt; 数组（批量数据） =&gt; 对象(既可以储存数据又可以存储函数)</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>C语言文件管理</title>
    <url>/2020/08/02/C%E8%AF%AD%E8%A8%80%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="C语言的文件管理"><a href="#C语言的文件管理" class="headerlink" title="C语言的文件管理"></a>C语言的文件管理</h1><blockquote>
<p>文件是任意的，示例为自己创建的文件</p>
</blockquote>
<p><img src="image-20200616144417914.png" ></img></p>
<ol>
<li>打开和关闭文件</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;    </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">	FILE *cfPtr;</span><br><span class="line">	<span class="keyword">if</span>((cfPtr = fopen(<span class="string">"index12.txt"</span>, <span class="string">"wb+"</span>)) == <span class="literal">NULL</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"This file can not be opened!\n"</span>);</span><br><span class="line">		<span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">/*在头文件stdlib.h中*/</span></span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">puts</span>(<span class="string">"Succeed in openning!"</span>);</span><br><span class="line">		fclose(cfPtr);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p><code>fgetc()</code> 和 <code>fputc()</code></p>
<p>C语言系统已在头文件中把<code>fputc</code>和<code>fgetc</code>函数定义为宏名<code>putc</code>和<code>getc</code></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> putc(ch,fp) fputc(ch,fp)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> getc(fp) fgetc(fp)</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	FILE *cfPtr;</span><br><span class="line">	<span class="keyword">char</span> ch, filename[<span class="number">10</span>];</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Please input the file's name:"</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>, filename);<span class="comment">//输入文件名</span></span><br><span class="line">	getchar(); <span class="comment">//把回车符消化 </span></span><br><span class="line">	<span class="keyword">if</span>((cfPtr = fopen(filename, <span class="string">"w"</span>)) == <span class="literal">NULL</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"This file can not be opened!"</span>);</span><br><span class="line">		<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请输入一个准备输入到文件中的字符串（以#结束）："</span>);</span><br><span class="line">	ch = getchar();</span><br><span class="line">	<span class="keyword">while</span>(ch != <span class="string">'#'</span>)&#123;</span><br><span class="line">		fputc(ch, cfPtr);</span><br><span class="line">		<span class="built_in">putchar</span>(ch);</span><br><span class="line">		ch = getchar();</span><br><span class="line">	&#125;</span><br><span class="line">    <span class="comment">/*循环条件可以也可以是cfPtr!=-1或cfPtr!=EOF*/</span></span><br><span class="line">    <span class="keyword">while</span>(!feof(cfPtr))&#123;</span><br><span class="line">		fputc(ch, out);</span><br><span class="line">		<span class="built_in">putchar</span>(ch);</span><br><span class="line">		ch = fgetc(in);</span><br><span class="line">	&#125;</span><br><span class="line">	fclose(cfPtr);</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="number">10</span>);<span class="comment">//向屏幕输出一个换行符</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><code>fputs</code>和<code>fgets</code></li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    	FILE *fp;</span><br><span class="line">	<span class="keyword">char</span> str[<span class="number">3</span>][<span class="number">10</span>], temp[<span class="number">10</span>];</span><br><span class="line">	<span class="keyword">int</span> i, j, k, n = <span class="number">3</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Enter strings:\n"</span>);</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">		gets(str[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>((fp = fopen(<span class="string">"index2.dat"</span>, <span class="string">"w"</span>)) == <span class="literal">NULL</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"can't open file!"</span>);</span><br><span class="line">		<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\nThe new sequence:\n"</span>);</span><br><span class="line">	<span class="comment">//将字符串写入文件</span></span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">		<span class="built_in">fputs</span>(str[i], fp);</span><br><span class="line">		<span class="built_in">fputs</span>(<span class="string">"\n"</span>, fp);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%s\n"</span>,str[i]);</span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>]; </span><br><span class="line">    <span class="comment">//将字符串读入字符数组并打印在屏幕上</span></span><br><span class="line">	<span class="keyword">while</span>(fgets(str, <span class="number">10</span>, fp) != <span class="literal">NULL</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%s"</span>, str);</span><br><span class="line">	&#125;</span><br><span class="line">	fclose(fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p><code>fprintf</code>和<code>fscanf</code>格式化读写数据文件</p>
</li>
<li><p><code>fread</code>和<code>fwrite</code></p>
</li>
<li><p>随机读写数据文件</p>
<p>​    <code>rewind()// 文件指针回到文首</code></p>
<p>​    <code>fseek(文件类型指针,位移量,起始点)</code></p>
</li>
</ol>
<blockquote>
<p>C标准指定的名字</p>
<p><img src="image-20200616161141526.png" ></img></p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">fseek(fp,<span class="number">100L</span>,<span class="number">0</span>);<span class="comment">//将文件位置标记向前移动到离文件开头100个字节处</span></span><br><span class="line">fseek(fp,<span class="number">50L</span>,<span class="number">1</span>);<span class="comment">//将文件位置标记向前移动到离当前位置50个字节处</span></span><br><span class="line">fseek(fp,<span class="number">-10L</span>,<span class="number">2</span>);<span class="comment">//将文件位置标记从文件末尾处向后退10个字节</span></span><br></pre></td></tr></table></figure>

<p>​        借助<code>rewind</code>和<code>fseek</code>便可实现随机读写（me：随意位置读写）</p>
<ol start="6">
<li><p><code>ferror(fp)</code>和<code>clearerr</code></p>
<p>​    <code>ferror(fp)</code>返回0表示未出错，返回一个非零值，表示出错。</p>
<p>​    <code>clearerr</code>用来使<code>ferror(fp)</code>为零，便于继续检错。</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>JavaScript☞localStorage 和cookie初步理解</title>
    <url>/2020/07/20/JavaScript%E2%98%9ElocalStorage%20%E5%92%8Ccookie%E5%88%9D%E6%AD%A5%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="JavaScript☞localStorage-和cookie初步理解"><a href="#JavaScript☞localStorage-和cookie初步理解" class="headerlink" title="JavaScript☞localStorage 和cookie初步理解"></a>JavaScript☞localStorage 和cookie初步理解</h1><p> 本地存储技术</p>
<p>​      <code>localStorage</code>（IE8以下不兼容）</p>
<p>​        1.永久储存</p>
<p>​        2.最大可存储5M   客户端的一个微型数据库</p>
<p>​        3.只能存储string</p>
<p>​      <code>cookie</code></p>
<p>​        1.可以设置过期时间</p>
<p>​        2.最大可以存储4KB</p>
<p>​        3.每一个域名下面最多可以存储50条数据</p>
<p>​      sessionStorage（结合后台使用）</p>
<p>localStorage 对象的方法</p>
<p>​        <code>setItem(name, value);</code></p>
<p>​        <code>getItem(name);</code></p>
<p>​        <code>removeItem(name);</code></p>
<p><strong>实现一个有记忆的拖动条</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>滑条slide<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line">            margin: 0;padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#slide</span>&#123;</span></span><br><span class="line">            position: relative;width: 600px;height: 30px;border: 1px solid black;margin: 100px auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#block</span>&#123;</span></span><br><span class="line">            width: 30px;height: 30px;background-color: orange;position: absolute;left: 100px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#full</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 100<span class="selector-tag">px</span>;<span class="selector-tag">height</span>: 30<span class="selector-tag">px</span>;<span class="selector-tag">background-color</span>: <span class="selector-tag">gray</span>;<span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;<span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;<span class="selector-tag">left</span>: 0;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oSlide = <span class="built_in">document</span>.getElementById(<span class="string">"slide"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oFull = <span class="built_in">document</span>.getElementById(<span class="string">"full"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBlock = <span class="built_in">document</span>.getElementById(<span class="string">"block"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(!<span class="built_in">window</span>.localStorage)&#123;</span></span><br><span class="line"><span class="actionscript">                        alert(<span class="string">"该浏览器不支持localStorage"</span>);</span></span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//取出本地储存的值</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> l = localStorage.getItem(<span class="string">"slide"</span>) ? localStorage.getItem(<span class="string">"slide"</span>) : <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">                oBlock.style.left = l + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                oFull.style.width = l + <span class="string">"px"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//添加鼠标点击移动事件</span></span></span><br><span class="line"><span class="actionscript">            oBlock.onmousedown = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> offsetX = e.clientX - oBlock.offsetLeft;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> l = e.clientX - offsetX;</span></span><br><span class="line">                    if(l &gt;= 570)&#123;</span><br><span class="line"><span class="actionscript">                        l = <span class="string">"570px"</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    if(l &lt;= 0)&#123;</span><br><span class="line"><span class="actionscript">                        l = <span class="string">"0px"</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    oBlock.style.left = l + <span class="string">"px"</span>;</span></span><br><span class="line">                    </span><br><span class="line"><span class="actionscript">                    <span class="comment">//填充部分跟随滑块进行填充</span></span></span><br><span class="line"><span class="actionscript">                    oFull.style.width = l + <span class="string">"px"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">                    <span class="comment">//对当前滑块位置进行本地储存</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(!<span class="built_in">window</span>.localStorage)&#123;</span></span><br><span class="line"><span class="actionscript">                        alert(<span class="string">"该浏览器不支持localStorage"</span>);</span></span><br><span class="line"><span class="actionscript">                    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                        localStorage.setItem(<span class="string">"slide"</span>, l);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span></span><br><span class="line">                    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"slide"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"full"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"block"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞事件冒泡和触发对象</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1%E5%92%8C%E8%A7%A6%E5%8F%91%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="JavaScript☞事件冒泡和触发对象"><a href="#JavaScript☞事件冒泡和触发对象" class="headerlink" title="JavaScript☞事件冒泡和触发对象"></a>JavaScript☞事件冒泡和触发对象</h1><p>target   目标对象/触发对象    事件对象的属性</p>
<p>​      【注】这个事件是由谁而起的</p>
<p>​      IE8以下不兼容 其有方法 <code>window.event.srcElement;</code></p>
<p>所以兼容处理：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span><br><span class="line"><span class="keyword">var</span> target = e.target || <span class="built_in">window</span>.event.srcElement;</span><br></pre></td></tr></table></figure>

<hr>
<p>浏览器上事件天生的一个特点：事件流</p>
<p>​        </p>
<p>​          事件冒泡：由里向外逐级触发</p>
<p>​          事件捕获：由外向里逐级触发</p>
<p>​          阻止事件冒泡：浏览器兼容问题</p>
<p>​          事件对象的属性和方法：</p>
<p>​            //高版本兼容问题</p>
<p>​            <code>cancelBubble=true</code>    <code>stopPropagetion()</code></p>
<p>代码例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>事件冒泡和触发对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        div&#123;</span><br><span class="line">            padding: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;<span class="attribute">background-color</span>: black;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div2</span>&#123;<span class="attribute">background-color</span>: brown;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div3</span>&#123;<span class="attribute">background-color</span>:<span class="number">#aaa</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            target      目标对象/触发对象       事件对象的属性</span><br><span class="line">            【注】这个事件是由谁而起的</span><br><span class="line"><span class="javascript">            IE8以下不兼容 其有方法 <span class="built_in">window</span>.event.srcElement;</span></span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oLi = <span class="built_in">document</span>.getElementById(<span class="string">"li1"</span>);</span></span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="comment">//演示使用target</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oLi.onclick = function(ev)&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     var e = ev || window.event;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     var target = e.target || window.event.srcElement;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     // alert(this);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     alert(target.innerHTML);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oUl = <span class="built_in">document</span>.getElementById(<span class="string">"ul1"</span>);</span></span><br><span class="line"><span class="actionscript">            oUl.onclick = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> target = e.target || <span class="built_in">window</span>.event.srcElement;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="keyword">this</span>.tagName);<span class="comment">//this指向oUl</span></span></span><br><span class="line">                alert(target.innerHTML);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> aDivs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i= <span class="number">0</span>;i &lt; aDivs.length; i++)&#123;</span></span><br><span class="line"><span class="actionscript">                aDivs[i].onclick = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="keyword">this</span>.id);</span></span><br><span class="line">                    stopBubble(e);</span><br><span class="line">                    </span><br><span class="line"><span class="actionscript">                    <span class="comment">// e.cancelBubble = true;</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// e.stopPropagation();</span></span></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">stopBubble</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//e是事件对象</span></span></span><br><span class="line">                if(e.stopPropagetion)&#123;</span><br><span class="line">                    e.stopPropagetion();</span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    e.cancelBubble = <span class="literal">true</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"ul1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"li1"</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞例子搞定事件监听</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E4%BE%8B%E5%AD%90%E6%90%9E%E5%AE%9A%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC/</url>
    <content><![CDATA[<h1 id="JavaScript☞例子搞定事件监听"><a href="#JavaScript☞例子搞定事件监听" class="headerlink" title="JavaScript☞例子搞定事件监听"></a>JavaScript☞例子搞定事件监听</h1><p>ps:其实是我不想整理笔记了，不过w3c网站的手册有更官方的文档，<a href="https://www.w3school.com.cn/js/js_htmldom_eventlistener.asp" target="_blank" rel="noopener">点击这里</a></p>
<p>例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Event事件监听器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            1.传统事件绑定</span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">1</span>&gt;</span>重复</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">                <span class="tag">&lt;<span class="name">2</span>&gt;</span>精确删除事件上的某个函数</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            2.事件监听器</span><br><span class="line">                    addEventListener()</span><br><span class="line"><span class="actionscript">                        格式：node.addEventListener(<span class="string">"click"</span>)</span></span><br><span class="line">                        参数：</span><br><span class="line">                            第一个参数：事件类型</span><br><span class="line">                            第二个参数：绑定函数</span><br><span class="line"><span class="actionscript">                            第三个参数：布尔值    <span class="literal">true</span>    事件捕获</span></span><br><span class="line"><span class="actionscript">                                                <span class="literal">false</span>   事件冒泡    默认</span></span><br><span class="line">       </span><br><span class="line">                    removeEventListener()</span><br><span class="line">                        格式：node.removeEventListener</span><br><span class="line">                        参数：</span><br><span class="line">                            第一个参数：    事件类型</span><br><span class="line">                            第二个参数：    删除的函数名</span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// var oBtn = document.getElementById("btn1");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oBtn.onclick = function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     alert("点击1");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oBtn.onclick = function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     alert("点击2");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="comment">// oBtn.addEventListener("click", function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     alert("点击1");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oBtn.addEventListener("click", function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     alert("点击2");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> aBtns = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"button"</span>);</span></span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="comment">// //下标为0</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// aBtns[1].onclick = function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     alert("原有的点击函数");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// //取消下标1按钮上的函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// aBtns[0].onclick = function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     aBtns[1].onclick = show;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// //取消下标1按钮上的函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// aBtns[2].onclick = function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     aBtns[1].onclick = null;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line">                </span><br><span class="line"><span class="actionscript">            aBtns[<span class="number">1</span>].addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"原有的点击函数"</span>);</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            aBtns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                aBtns[<span class="number">1</span>].addEventListener(<span class="string">"click"</span>, show);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            aBtns[<span class="number">2</span>].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                aBtns[<span class="number">1</span>].removeEventListener(<span class="string">"click"</span>, show);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"hello world"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;button id="btn1" &gt;按钮&lt;/button&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>添加函数<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>原有函数<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>删除函数<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞动态生成表格</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90%E8%A1%A8%E6%A0%BC/</url>
    <content><![CDATA[<h1 id="JavaScript☞动态生成表格"><a href="#JavaScript☞动态生成表格" class="headerlink" title="JavaScript☞动态生成表格"></a>JavaScript☞动态生成表格</h1><p><strong>节点操作和事件的练习小例子</strong></p>
<p>输入行数和列数，生成相应的表格</p>
<p>代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>动态生成表格<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#t1</span> <span class="selector-tag">tr</span> <span class="selector-tag">td</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 50<span class="selector-tag">px</span>;<span class="selector-tag">height</span>: 1<span class="selector-class">.5em</span>;<span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box0</span>&#123;<span class="attribute">background-color</span>: red;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span>&#123;<span class="attribute">background-color</span>: green;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oRow = <span class="built_in">document</span>.getElementById(<span class="string">"row"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oCol = <span class="built_in">document</span>.getElementById(<span class="string">"col"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn1"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oT1 = <span class="built_in">document</span>.getElementById(<span class="string">"t1"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//给表格上的删除按钮添加事件委托</span></span></span><br><span class="line"><span class="actionscript">            oT1.onclick = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> target = e.target || <span class="built_in">window</span>.event.srcElement;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(target.nodeName.toLowerCase() == <span class="string">"button"</span>)&#123;</span></span><br><span class="line">                    oT1.removeChild(target.parentNode.parentNode);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            oBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">                if(!oRow.value || !oCol.value)&#123;</span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"请输入对应的行列， 生成表格"</span>);</span></span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//行</span></span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; oRow.value; i++)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> oTr = <span class="built_in">document</span>.createElement(<span class="string">"tr"</span>);</span></span><br><span class="line"><span class="actionscript">                        oTr.className = <span class="string">"box"</span> + (i % <span class="number">2</span>);</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; oCol.value; j++)&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">var</span> oTd = <span class="built_in">document</span>.createElement(<span class="string">"td"</span>);</span></span><br><span class="line">                            oTr.appendChild(oTd);</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"><span class="actionscript">                        <span class="comment">//添加一个删除按钮</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> oClose = <span class="built_in">document</span>.createElement(<span class="string">"td"</span>);</span></span><br><span class="line"><span class="handlebars"><span class="xml">                        oClose.innerHTML = "<span class="tag">&lt;<span class="name">button</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span>";</span></span></span><br><span class="line">                        oTr.appendChild(oClose);</span><br><span class="line">                        oT1.appendChild(oTr);</span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"行"</span> <span class="attr">id</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"列"</span> <span class="attr">id</span>=<span class="string">"col"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>生成<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"t1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞this指针</title>
    <url>/2020/07/20/JavaScript%E2%98%9Ethis%E6%8C%87%E9%92%88/</url>
    <content><![CDATA[<h1 id="JavaScript☞this指针"><a href="#JavaScript☞this指针" class="headerlink" title="JavaScript☞this指针"></a>JavaScript☞this指针</h1><p>this概念：只要封装函数，任何一个函数系统都会内置一个叫做this的变量，</p>
<p>​        this变量储存的是地址，是当前函数主人的地址。</p>
<p>​        【注】this永远指向当前函数的主人。函数的主人要通过当前上下文去判断。</p>
<p>看个例子会有一个基本的认识：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>this指针<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//this指向window</span></span></span><br><span class="line"><span class="actionscript">            alert(<span class="keyword">this</span>);</span></span><br><span class="line">            person.show();</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//this指向oBtn</span></span></span><br><span class="line"><span class="actionscript">            oBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="keyword">this</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> aBtns = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"button"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; aBtns.length;i++)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//给每一个按钮添加自定义属性</span></span></span><br><span class="line">            aBtns[i].index = i;</span><br><span class="line"><span class="actionscript">            aBtns[i].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="keyword">this</span>.index);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//this指向person</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> person = &#123;</span></span><br><span class="line"><span class="actionscript">            username:<span class="string">"Dopp"</span> ,</span></span><br><span class="line"><span class="actionscript">            show:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="keyword">this</span>.username);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>3<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞合并对象Object.assign</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E5%90%88%E5%B9%B6%E5%AF%B9%E8%B1%A1Object.assign/</url>
    <content><![CDATA[<h1 id="JavaScript☞合并对象Object-assign"><a href="#JavaScript☞合并对象Object-assign" class="headerlink" title="JavaScript☞合并对象Object.assign"></a>JavaScript☞合并对象Object.assign</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Object.assign  合并对象</span></span><br><span class="line"><span class="comment">    【注】将传入的对象都合并到第一个对象里，除了第一个传入的参数（对象）其他传入对象不会发生变化</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    浅拷贝//me：传地址</span></span><br><span class="line"><span class="comment">    深拷贝：将符合数据类型重新生成一份进行拷贝</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    a:<span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    b:<span class="number">20</span>,</span><br><span class="line">    a:<span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj3 = &#123;</span><br><span class="line">    d:[<span class="number">1</span>,<span class="number">2</span>,<span class="string">"Dopp"</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Object</span>.assign(obj1, obj2, obj3);</span><br><span class="line">alert(obj1.a);<span class="comment">//100</span></span><br><span class="line">obj1.a = <span class="number">20</span>;</span><br><span class="line">alert(obj2.a);<span class="comment">//100,所以是深拷贝</span></span><br><span class="line"><span class="comment">// console.log(obj1);</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞数组的遍历2和对象的遍历</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E6%95%B0%E7%BB%84%E7%9A%84%E9%81%8D%E5%8E%862%E5%92%8C%E5%AF%B9%E8%B1%A1%E7%9A%84%E9%81%8D%E5%8E%86/</url>
    <content><![CDATA[<h1 id="JavaScript☞数组的遍历2和对象的遍历"><a href="#JavaScript☞数组的遍历2和对象的遍历" class="headerlink" title="JavaScript☞数组的遍历2和对象的遍历"></a>JavaScript☞数组的遍历2和对象的遍历</h1><p>数组遍历</p>
<p>​        for循环</p>
<p>​        for in</p>
<p>​        forEach</p>
<p>​        for..of</p>
<p>​      对象遍历</p>
<p>​        for in</p>
<p>下面是例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>];</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    username:<span class="string">"Dopp"</span>,</span><br><span class="line">    age:<span class="number">18</span>,</span><br><span class="line">    ability:<span class="string">"抬棺"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"for循环"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i =<span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"for in "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"forEach"</span>);</span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"for...of"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> arr)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对象的遍历</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"对象遍历仅此一种方式"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item + <span class="string">":"</span> + obj[item]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞事件监听器（兼容处理示例）</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E5%99%A8%EF%BC%88%E5%85%BC%E5%AE%B9%E5%A4%84%E7%90%86%E7%A4%BA%E4%BE%8B%EF%BC%89/</url>
    <content><![CDATA[<h1 id="JavaScript☞事件监听器"><a href="#JavaScript☞事件监听器" class="headerlink" title="JavaScript☞事件监听器"></a>JavaScript☞事件监听器</h1><p>兼容处理的例子</p>
<p>还是先强调一遍：<a href="https://www.w3school.com.cn/js/js_htmldom_eventlistener.asp" target="_blank" rel="noopener" >参考资料</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">element.addEventListener(event, function, useCapture);</span><br><span class="line">            第一个参数是事件的类型（比如 "click" 或 "mousedown"）。注意：不要加on</span><br><span class="line"></span><br><span class="line">            第二个参数是当事件发生时我们需要调用的函数。</span><br><span class="line"></span><br><span class="line">            第三个参数是布尔值，指定使用事件冒泡还是事件捕获。此参数是可选的。true：事件捕获    false：事件冒泡</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>事件监听器的兼容<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            IE8以下兼容处理</span><br><span class="line">            attachEvent()和 detachEvent()</span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">addEvent</span><span class="params">(node, evenType, funcName)</span></span>&#123;</span></span><br><span class="line">            if(node.addEventListener)&#123;</span><br><span class="line"><span class="actionscript">                node.addEventListener(evenType, funcName, <span class="literal">false</span>);</span></span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                node.attachEvent(<span class="string">"on"</span> + evenType, funcName);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">removeEvent</span><span class="params">(node, evenType, funcName)</span></span>&#123;</span></span><br><span class="line">            if(node.removeEventListener)&#123;</span><br><span class="line">                node.removeEventListener(evenType, funcName);</span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                node.detachEvent(<span class="string">"on"</span> + evenType, funcName);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="actionscript">            addEvent(oDiv, <span class="string">"click"</span>, show);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">"Hello world!"</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞看看事件捕获和事件冒泡</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E7%9C%8B%E7%9C%8B%E4%BA%8B%E4%BB%B6%E6%8D%95%E8%8E%B7%E5%92%8C%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1/</url>
    <content><![CDATA[<h1 id="JavaScript☞看看事件捕获和事件冒泡"><a href="#JavaScript☞看看事件捕获和事件冒泡" class="headerlink" title="JavaScript☞看看事件捕获和事件冒泡"></a>JavaScript☞看看事件捕获和事件冒泡</h1><p>事件捕获（事件监听器）：</p>
<p>element.addEventListener(event, function, useCapture);</p>
<p>​      第一个参数是事件的类型（比如 “click” 或 “mousedown”）。注意：不要加on</p>
<p>​      第二个参数是当事件发生时我们需要调用的函数。</p>
<p>​      第三个参数是布尔值，指定使用事件冒泡还是事件捕获。此参数是可选的。true：事件捕获  false：事件冒泡</p>
<p>资料出自：<a href="https://www.w3school.com.cn/js/js_htmldom_eventlistener.asp" target="_blank" rel="noopener" >点我w3c</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> aDivs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; aDivs.length;i++)&#123;</span><br><span class="line">        aDivs[i].addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            alert(<span class="keyword">this</span>.id);</span><br><span class="line">        &#125;, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure>

<p>事件冒泡（直接添加）：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i= <span class="number">0</span>;i &lt; aDivs.length; i++)&#123;</span><br><span class="line">aDivs[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span><br><span class="line">    alert(<span class="keyword">this</span>.id);</span><br><span class="line">    <span class="comment">//下面两行是阻止事件冒泡的代码</span></span><br><span class="line">    <span class="comment">// e.cancelBubble = true;</span></span><br><span class="line">    <span class="comment">// e.stopPropagation();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>事件的添加方式不同</p>
]]></content>
  </entry>
  <entry>
    <title>JavaScript☞节点操作之改变字体的大小和颜色</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C%E4%B9%8B%E6%94%B9%E5%8F%98%E5%AD%97%E4%BD%93%E7%9A%84%E5%A4%A7%E5%B0%8F%E5%92%8C%E9%A2%9C%E8%89%B2/</url>
    <content><![CDATA[<h1 id="JavaScript☞节点操作之改变字体的大小和颜色"><a href="#JavaScript☞节点操作之改变字体的大小和颜色" class="headerlink" title="JavaScript☞节点操作之改变字体的大小和颜色"></a>JavaScript☞节点操作之改变字体的大小和颜色</h1><blockquote>
<p> 写一个定时器，每个一秒修改一次div内文本颜色和文字大小</p>
<p>​       最开始这个字体大小是默认大小，大小开始增大，当增大了6次以后， 文字大小开始缩小，缩小6次，文字再开始增大</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>改变字体的大小和颜色<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            颜色随机</span><br><span class="line">            rgba(255, 255, 255, 0);</span><br><span class="line"><span class="javascript">			<span class="built_in">Math</span>.random会产生<span class="number">0</span>~<span class="number">1</span>的随机小数</span></span><br><span class="line"><span class="javascript">            <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">256</span>)</span></span><br><span class="line">        */</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">randomColor</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> str = <span class="string">"rgba("</span> +  <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">256</span>) + <span class="string">","</span> + <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">256</span>) + <span class="string">","</span> + <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">256</span>) + <span class="string">","</span> + <span class="number">1</span> +<span class="string">")"</span>; </span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> str;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//alert(randomColor());</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> speed = <span class="number">5</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> s = <span class="number">18</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">                oDiv.style.color = randomColor();</span><br><span class="line">                </span><br><span class="line"><span class="actionscript">                oDiv.style.border = <span class="number">2</span> + <span class="string">"px "</span> + <span class="string">"dotted "</span> + randomColor();</span></span><br><span class="line">                </span><br><span class="line">                if(i%6==0)&#123;</span><br><span class="line">                    speed = -speed;</span><br><span class="line">                &#125;</span><br><span class="line">                s += speed;</span><br><span class="line"><span class="actionscript">                oDiv.style.fontSize = s + <span class="string">"px"</span>;</span></span><br><span class="line">                i++;            </span><br><span class="line">            &#125;, 1000);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line"><span class="css">            <span class="comment">/* height: 300px; */</span></span></span><br><span class="line">            line-height: 300px;</span><br><span class="line">            margin: 200px auto;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#12e</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            vertical-align: middle;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span>Elsanna<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞箭头函数</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="JavaScript☞箭头函数"><a href="#JavaScript☞箭头函数" class="headerlink" title="JavaScript☞箭头函数"></a>JavaScript☞箭头函数</h1><p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    箭头函数：新潮的函数写法</span></span><br><span class="line"><span class="comment">    【注】适当的省略函数中的function和大括号</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    function</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// var add2 = x =&gt; x+10;</span></span><br><span class="line"><span class="comment">// var add = x =&gt; &#123;</span></span><br><span class="line"><span class="comment">//     x += 10;</span></span><br><span class="line"><span class="comment">//     return x;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// alert(add2(5));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr = [10, 20, 30, 40, 50];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var newArr = arr.filter(item =&gt; item &gt; 20);//这是一个筛选器</span></span><br><span class="line"><span class="comment">// alert(newArr);</span></span><br><span class="line"><span class="comment">// alert(arr.map(item =&gt; item*1.3));//对数组的元素进行处理</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    箭头函数需要注意：</span></span><br><span class="line"><span class="comment">        1.箭头函数，不能用new</span></span><br><span class="line"><span class="comment">        2.箭头函数如果返回的是一个对象，一定要加()</span></span><br><span class="line"><span class="comment">        3.箭头函数的this指的是上一层函数的主人</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    username:<span class="string">"Dopp"</span>,</span><br><span class="line">    show:<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        alert(<span class="keyword">this</span>);</span><br><span class="line">        alert(person.username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞解构</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E8%A7%A3%E6%9E%84/</url>
    <content><![CDATA[<h1 id="JavaScript☞解构"><a href="#JavaScript☞解构" class="headerlink" title="JavaScript☞解构"></a>JavaScript☞解构</h1><p>懒，例子</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    中括号解构</span></span><br><span class="line"><span class="comment">    大括号解构</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.中括号解构</span></span><br><span class="line"><span class="comment">// var x = 10, y = 20, z = 30;</span></span><br><span class="line"><span class="comment">// var [x, y, z] = [10, 20, 30];</span></span><br><span class="line"><span class="comment">// var [x, [y, a], z] = [10, [20, 40], 30];</span></span><br><span class="line"><span class="comment">// alert(a + "," + y);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2.大括号解构</span></span><br><span class="line"><span class="comment">// var &#123;name, age, sex&#125; = &#123;</span></span><br><span class="line"><span class="comment">//     age:18,</span></span><br><span class="line"><span class="comment">//     name:"Dopp",</span></span><br><span class="line"><span class="comment">//     sex:"male"</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">// alert(age);</span></span><br><span class="line"><span class="comment">// alert(name);</span></span><br><span class="line"><span class="comment">// alert(sex);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    使用解构的好处</span></span><br><span class="line"><span class="comment">        1.交换变量</span></span><br><span class="line"><span class="comment">        2.函数可以返回多个值</span></span><br><span class="line"><span class="comment">        3.函数定义参数和传入的参数的顺序改变</span></span><br><span class="line"><span class="comment">            【注】参数可以有默认值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// var [x, y] = [10, 20];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// [x, y] = [y, x];</span></span><br><span class="line"><span class="comment">// alert(x + " " + y);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// function show()&#123;</span></span><br><span class="line"><span class="comment">//     return ["结果1", "结果2","结果3"];</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// var [x, y, z] = show();</span></span><br><span class="line"><span class="comment">// alert(x + y + z);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// function show2(&#123;name = "hu", age, sex&#125;)&#123;</span></span><br><span class="line"><span class="comment">//     alert("I am " + name + " aged " + age + " sex: " + sex);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// show2(&#123;</span></span><br><span class="line"><span class="comment">//     age:18,</span></span><br><span class="line"><span class="comment">//     name:"Dopp",</span></span><br><span class="line"><span class="comment">//     sex:"male"</span></span><br><span class="line"><span class="comment">//     &#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var arr2 = [10, 20, 30, 40, 50];</span></span><br><span class="line"><span class="comment">// var &#123;0:first, 4:last&#125; = arr2;</span></span><br><span class="line"><span class="comment">// alert(first);</span></span><br><span class="line"><span class="comment">// alert(last == arr2[4]);</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞拖拽</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E6%8B%96%E6%8B%BD/</url>
    <content><![CDATA[<h1 id="JavaScript☞拖拽"><a href="#JavaScript☞拖拽" class="headerlink" title="JavaScript☞拖拽"></a>JavaScript☞拖拽</h1><p>实现一个拖拽方块</p>
<p>思路：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/*mousedown</span></span><br><span class="line"><span class="comment">    记录鼠标按下位置和被拖拽物体的相对距离*/</span></span><br><span class="line">    <span class="keyword">var</span> offsetX = e.clientX - node.offsetLeft</span><br><span class="line">    <span class="keyword">var</span> offsetY = e.clientY - node.offsetLeft</span><br><span class="line"><span class="comment">/*mousemove</span></span><br><span class="line"><span class="comment">    一致保持相对距离*/</span></span><br><span class="line">    <span class="comment">//鼠标位置减去相对位置</span></span><br><span class="line">    node.style.left = e.clientX - offsetX + <span class="string">"px</span></span><br><span class="line"><span class="string">    node,style.top = e.clientY - offsetY + "</span>px<span class="string">"</span></span><br><span class="line"><span class="string">/*mouseup</span></span><br><span class="line"><span class="string">    取消拖拽*/</span></span><br></pre></td></tr></table></figure>

<p>HTML代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>拖拽<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line">            width: 100px;height: 100px;background-color: black;position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div2</span>&#123;</span></span><br><span class="line">            width: 100px;height: 100px;background-color: purple;position: absolute;top: 200px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv1 = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv2 = <span class="built_in">document</span>.getElementById(<span class="string">"div2"</span>);</span></span><br><span class="line">            drag(oDiv1);</span><br><span class="line">            dragLimit(oDiv2);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">dragLimit</span><span class="params">(node)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            node.onmousedown = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> offsetX = e.clientX - node.offsetLeft;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> offsetY = e.clientY - node.offsetTop;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> l = e.clientX - offsetX;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> t = e.clientY - offsetY;</span></span><br><span class="line">                    if(l &lt;= 0)&#123;</span><br><span class="line">                        l = 0;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> windowWidth = <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientWidth;<span class="comment">//浏览器兼容处理</span></span></span><br><span class="line">                    if(l &gt;= windowWidth - node.offsetWidth)&#123;</span><br><span class="line">                        l = windowWidth - node.offsetWidth;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(t &lt;= 0)&#123;</span><br><span class="line">                        t = 0;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> windowHeight = <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientHeight;<span class="comment">//浏览器兼容处理</span></span></span><br><span class="line">                    if(t &gt;= windowHeight - node.offsetHeight)&#123;</span><br><span class="line">                        t = windowHeight - node.offsetHeight;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    node.style.left = l + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                    node.style.top = t + <span class="string">"px"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">drag</span><span class="params">(node)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            node.onmousedown = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> offsetX = e.clientX - node.offsetLeft;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> offsetY = e.clientY - node.offsetTop;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> l = e.clientX - offsetX;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> t = e.clientY - offsetY;</span></span><br><span class="line">                    if(l &lt;= 0)&#123;</span><br><span class="line">                        l = 0;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> windowWidth = <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientWidth;<span class="comment">//浏览器兼容处理</span></span></span><br><span class="line">                    if(l &gt;= windowWidth - node.offsetWidth)&#123;</span><br><span class="line">                        l = windowWidth - node.offsetWidth;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(t &lt;= 0)&#123;</span><br><span class="line">                        t = 0;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> windowHeight = <span class="built_in">document</span>.documentElement.clientWidth || <span class="built_in">document</span>.body.clientHeight;<span class="comment">//浏览器兼容处理</span></span></span><br><span class="line">                    if(t &gt;= windowHeight - node.offsetHeight)&#123;</span><br><span class="line">                        t = windowHeight - node.offsetHeight;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞认识BOM</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E8%AE%A4%E8%AF%86BOM/</url>
    <content><![CDATA[<h1 id="JavaScript☞认识BOM"><a href="#JavaScript☞认识BOM" class="headerlink" title="JavaScript☞认识BOM"></a>JavaScript☞认识BOM</h1><h2 id="BOM：browser-object-model"><a href="#BOM：browser-object-model" class="headerlink" title="BOM：browser object model"></a>BOM：browser object model</h2><p>BOM即浏览器对象模型</p>
<p>系统对话框</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    BOM：browser object model</span></span><br><span class="line"><span class="comment">    系统对话框</span></span><br><span class="line"><span class="comment">        window 方法（一般情况下window可以省略）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            alert() 弹出警告框</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">            confirm() 弹出一个确定和取消的提示框</span></span><br><span class="line"><span class="comment">                点击 “确定” 返回true</span></span><br><span class="line"><span class="comment">                点击 “取消” 返回false</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            prompt() 弹出一个待输入的提示框</span></span><br><span class="line"><span class="comment">                参数：</span></span><br><span class="line"><span class="comment">                    第一个参数：面板上显示的内容</span></span><br><span class="line"><span class="comment">                    第二个参数：输入框里的默认（可以不传入）</span></span><br><span class="line"><span class="comment">                返回值：</span></span><br><span class="line"><span class="comment">                    点击“确定”，返回输入框中的内容</span></span><br><span class="line"><span class="comment">                    点击“取消”，返回null</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            open() 可以导航到一个特定的url，也可以打开一个新的浏览器窗口</span></span><br><span class="line"><span class="comment">                open("http://www.baidu.com");       //新建页面并打开百度</span></span><br><span class="line"><span class="comment">                open("http://www.baidu.com", "xxx");    //在命名为"xxx"的窗口打开百度，若没有此窗口则新建</span></span><br><span class="line"><span class="comment">                open("http://www.baidu.com", "_parent");//在本页窗口打开，_blank是新建</span></span><br><span class="line"><span class="comment">                【注】不命名会每次打开新窗口，命名的第一次打开新窗口，之后会在这个窗口加载      </span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br></pre></td></tr></table></figure>

<p>没有例子，嘻嘻<img src="file:///C:%5CUsers%5CADMINI~1%5CAppData%5CLocal%5CTemp%5CSGPicFaceTpBq%5C4772%5C00202BF0.png" alt="img"></p>
]]></content>
  </entry>
  <entry>
    <title>JavaScript☞认识DOM</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E8%AE%A4%E8%AF%86DOM/</url>
    <content><![CDATA[<h1 id="JavaScript☞认识DOM"><a href="#JavaScript☞认识DOM" class="headerlink" title="JavaScript☞认识DOM"></a>JavaScript☞认识DOM</h1><h2 id="DOM：document-object-model"><a href="#DOM：document-object-model" class="headerlink" title="DOM：document object model"></a>DOM：document object model</h2><p>DOM即文档对象模型</p>
<p>节点类型：</p>
<table>
<thead>
<tr>
<th>节点类型</th>
<th>例子</th>
</tr>
</thead>
<tbody><tr>
<td>元素节点</td>
<td>div</td>
</tr>
<tr>
<td>属性节点</td>
<td>id = ‘div1’</td>
</tr>
<tr>
<td>文本节点</td>
<td>div文本</td>
</tr>
</tbody></table>
<p>元素节点的获取方法</p>
<p><code>document.getElementById(id)</code></p>
<p>功能：通过id获取当前符合条件的要素（id必须是唯一的）。</p>
<p>返回值：就是符合条件的一个节点</p>
<p>小例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>认识DOM<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line">            alert(oDiv);</span><br><span class="line">            /*</span><br><span class="line">                获取行间的属性值</span><br><span class="line">            */</span><br><span class="line">            alert(oDiv.id);</span><br><span class="line">            alert(oDiv.title);</span><br><span class="line"><span class="actionscript">            <span class="comment">//访问class 通过clasName访问</span></span></span><br><span class="line">            alert(oDiv.className);</span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="comment">//设置行间属性的值</span></span></span><br><span class="line"><span class="actionscript">            oDiv.id = <span class="string">"div2"</span>;</span></span><br><span class="line"><span class="actionscript">            oDiv.title = <span class="string">"bye"</span>;</span></span><br><span class="line"><span class="actionscript">            oDiv.className = <span class="string">"box2"</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//【注】oDiv.xxx这种方式只能访问内联的CSS样式（就是写在标签上的）</span></span></span><br><span class="line">           </span><br><span class="line">            alert(oDiv.style.width);</span><br><span class="line">            alert(oDiv.style.length);</span><br><span class="line">            /*</span><br><span class="line">                【注】如果CSS样式带-将-去掉，从第二个单词开始首字母大写。</span><br><span class="line">            */</span><br><span class="line"><span class="actionscript">            alert(oDiv.style.backgroundColor);<span class="comment">//css中是background-color</span></span></span><br><span class="line"><span class="actionscript">            oDiv.style.backgroundColor = <span class="string">"#000"</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">title</span>=<span class="string">"hello"</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">style</span>=<span class="string">"width: 300px; height: 300px; background-color: #f00;"</span>&gt;</span>div文本<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞闭包</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E9%97%AD%E5%8C%85/</url>
    <content><![CDATA[<h1 id="JavaScript☞闭包"><a href="#JavaScript☞闭包" class="headerlink" title="JavaScript☞闭包"></a>JavaScript☞闭包</h1><h2 id="认识闭包"><a href="#认识闭包" class="headerlink" title="认识闭包"></a>认识闭包</h2><p>满足以下条件的叫做闭包：</p>
<p>​        1.函数嵌套函数</p>
<p>​        2.内部函数使用外部函数的形参和变量</p>
<p>​        3.被引用的形参或变量就不会被垃圾回收机制所回收</p>
<p>小例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aaa</span>(<span class="params">num1</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num2 = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">bbb</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(num1 + <span class="string">","</span> + num2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bbb;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> res = aaa(<span class="number">20</span>);</span><br><span class="line">res();</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞选项卡案例</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E9%80%89%E9%A1%B9%E5%8D%A1%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="JavaScript☞选项卡案例"><a href="#JavaScript☞选项卡案例" class="headerlink" title="JavaScript☞选项卡案例"></a>JavaScript☞选项卡案例</h1><p><strong>思路</strong>：</p>
<p>所有div都设为display：none</p>
<p>只留一个active的按钮及其对应的div标签</p>
<p>点击按钮之后</p>
<p>现将所有div设置display：none</p>
<p>点哪个按钮就把该按钮的class属性改为active，对应标签设置display：block</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>选项卡案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span> <span class="selector-tag">button</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 100<span class="selector-tag">px</span>; <span class="selector-tag">height</span>: 30<span class="selector-tag">px</span>;<span class="selector-tag">background-color</span>: <span class="selector-tag">grey</span>;<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;<span class="selector-tag">font-size</span>: 18<span class="selector-tag">px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span> <span class="selector-class">.active</span>&#123;</span></span><br><span class="line">            background-color: orange;color: blue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line">            width: 340px;height: 300px;border: 1px solid black;display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv1 = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> aBtns = oDiv1.getElementsByTagName(<span class="string">"button"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> aDivs = oDiv1.getElementsByTagName(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//给按钮添加点击事件</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; aBtns.length;i++)&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//添加index属性，方便利用下标找到伪数组对应的div标签</span></span></span><br><span class="line">                aBtns[i].index = i;</span><br><span class="line"><span class="actionscript">                aBtns[i].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>;j &lt; aBtns.length;j++)&#123;</span></span><br><span class="line"><span class="actionscript">                        aBtns[j].className = <span class="string">""</span>;</span></span><br><span class="line"><span class="actionscript">                        aDivs[j].style.display = <span class="string">"none"</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    aDivs[<span class="keyword">this</span>.index].style.display = <span class="string">"block"</span>;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.className = <span class="string">"active"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--按钮内容和div标签内容一次对应--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>HTMl5<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display: block;"</span>&gt;</span>HTML5是Web中核心语言HTML的规范<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>Python是一种计算机程序设计语言<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>Java是一种面向对象编程语言<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>JavaScript☞获取当前元素的样式</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E7%9A%84%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="JavaScript☞获取当前元素的样式"><a href="#JavaScript☞获取当前元素的样式" class="headerlink" title="JavaScript☞获取当前元素的样式"></a>JavaScript☞获取当前元素的样式</h1><blockquote>
<p>直接上例子</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>获取当前元素的样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line">            background-color: blue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box</span>&#123;<span class="attribute">height</span>: <span class="number">300px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line">            /*</span><br><span class="line">                通过style.xxx的方式只能访问内联的CSS样式</span><br><span class="line">            */</span><br><span class="line">            alert(oDiv.style.backgroundColor);</span><br><span class="line">            alert(oDiv.style.width);</span><br><span class="line">            alert(oDiv.style.height);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.currentStyle["height"]); //IE兼容</span></span></span><br><span class="line">        </span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(getComputedStyle(oDiv)["height"]);//火狐、谷歌</span></span></span><br><span class="line"><span class="actionscript">            alert(getStyle(oDiv, <span class="string">"height"</span>));</span></span><br><span class="line">            /*</span><br><span class="line">                设置样式</span><br><span class="line">                .style.xxx方式设置css样式，因为行间样式的权重最高</span><br><span class="line">            */</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn1"</span>);</span></span><br><span class="line"><span class="actionscript">            oBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                oDiv.style.backgroundColor = <span class="string">"orange"</span>;</span></span><br><span class="line"><span class="actionscript">                oDiv.style.height = <span class="string">"500px"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getStyle</span><span class="params">(node, cssStyle)</span></span>&#123;</span></span><br><span class="line">            alert(node.currentStyle);</span><br><span class="line"><span class="actionscript">            <span class="comment">//兼容处理</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> node.currentStyle ? node.currentStyle[cssStyle] : getComputedStyle(node)[cssStyle];</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">style</span>=<span class="string">"width: 200px; background-color: red;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>修改样式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞面向对象</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="JavaScript☞面向对象"><a href="#JavaScript☞面向对象" class="headerlink" title="JavaScript☞面向对象"></a>JavaScript☞面向对象</h1><p>首先是如何创建一个对象，对啦，在JavaScript中可以使用构造函数来创建一个对象,构造函数则比较像类</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    工厂模式：</span></span><br><span class="line"><span class="comment">        1.原料</span></span><br><span class="line"><span class="comment">        2.加工</span></span><br><span class="line"><span class="comment">        3.出厂</span></span><br><span class="line"><span class="comment">        【注】凡是满足上述三个步骤创建对象的函数，我们把它叫做工厂方法。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        如果，我们某一个函数，使用new运算符去调用</span></span><br><span class="line"><span class="comment">            1.当前函数中的this指向新创建的对象</span></span><br><span class="line"><span class="comment">            2.自动完成1.原料和3.出厂操作</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        这种通过new调用函数，我们把它叫做构造函数，构造函数，充当类的作用</span></span><br><span class="line"><span class="comment">        【注】构造函数一般情况下首字母大写</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createPerson</span>(<span class="params">name, sex</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//1.原料</span></span><br><span class="line">    <span class="comment">// var obj = new Object();</span></span><br><span class="line">    <span class="comment">//2.加工</span></span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    <span class="comment">// this.show = function()&#123;</span></span><br><span class="line">    <span class="comment">//     alert("I am " + this.name + "sex: " + this.sex);</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="comment">//3.出厂</span></span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line">createPerson.prototype.show = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"I am "</span> + <span class="keyword">this</span>.name + <span class="string">"sex: "</span> + <span class="keyword">this</span>.sex);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj1 =<span class="keyword">new</span> createPerson(<span class="string">"Dopp"</span>, <span class="string">"male"</span>);<span class="comment">//创建了一个对象</span></span><br><span class="line"><span class="keyword">var</span> obj2 =<span class="keyword">new</span> createPerson(<span class="string">"li"</span>, <span class="string">"famale"</span>);<span class="comment">//创建了另一个对象</span></span><br><span class="line"><span class="comment">/*不过构造函数当然也是函数，解构同样适用，再此不在举例*/</span></span><br><span class="line">alert(obj1.show === obj2.show);</span><br></pre></td></tr></table></figure>

<p>仿照此，数组也是对象，可以给数组添加自己的方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>];</span><br><span class="line"><span class="comment">//添加求和函数sum</span></span><br><span class="line">arr1.sum = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">        sum += <span class="keyword">this</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line">alert(arr1.sum());</span><br></pre></td></tr></table></figure>

<p>对象拷贝</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    a:<span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj2 = obj1;</span><br><span class="line">obj2.a = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//此时obj1的a也发生了改变</span></span><br><span class="line">alert(obj1.a);<span class="comment">//me：复杂数据结构传地址,浅拷贝</span></span><br><span class="line"><span class="keyword">var</span> obj3 = &#123;&#125;;</span><br><span class="line"><span class="comment">//将原来的数据复制一份传进去</span></span><br><span class="line"><span class="keyword">for</span>(i <span class="keyword">in</span> obj1)&#123;</span><br><span class="line">    obj3[i] = obj1[i];</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">obj3.a = <span class="number">3</span>;</span><br><span class="line">alert(obj1.a);</span><br><span class="line">alert(obj3.a);</span><br></pre></td></tr></table></figure>

<p>聊聊prototype原型对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    prototype   原型对象</span></span><br><span class="line"><span class="comment">    概念：每一个函数上，都有一个原型对象prototype</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    用在构造函数上，我们可以给构造函数的原型prototype，添加方法</span></span><br><span class="line"><span class="comment">    1.如果我们将方法添加到构造函数的原型prototype对象上。</span></span><br><span class="line"><span class="comment">    2，构造函数构造出来的对象共享数据原型上所有的方法。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>];</span><br><span class="line"><span class="comment">// arr1.sum = function()&#123;</span></span><br><span class="line"><span class="comment">//     var sum = 0;</span></span><br><span class="line"><span class="comment">//     for(var i =0; i &lt; this.length; i++)&#123;</span></span><br><span class="line"><span class="comment">//         sum += this[i];</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     return sum;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// alert(arr1.sum());</span></span><br><span class="line"><span class="comment">// arr2.sum = function()&#123;</span></span><br><span class="line"><span class="comment">//     var sum = 0;</span></span><br><span class="line"><span class="comment">//     for(var i =0; i &lt; this.length; i++)&#123;</span></span><br><span class="line"><span class="comment">//         sum += this[i];</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     return sum;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// alert(arr2.sum());</span></span><br><span class="line"><span class="comment">// alert(arr1.sum === arr2.sum);</span></span><br><span class="line"><span class="built_in">Array</span>.prototype.sum = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">        sum += <span class="keyword">this</span>[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line">alert(arr1.sum());</span><br><span class="line">alert(arr2.sum());</span><br><span class="line">alert(arr1.sum === arr2.sum);</span><br></pre></td></tr></table></figure>

<p><em>prototype原型对象，me:算是添加类的公共方法</em></p>
<h2 id="重点来了（其实我也不知道算重点不算，嘻嘻）"><a href="#重点来了（其实我也不知道算重点不算，嘻嘻）" class="headerlink" title="重点来了（其实我也不知道算重点不算，嘻嘻）"></a>重点来了（其实我也不知道算重点不算，嘻嘻）</h2><h3 id="继承、封装、多态"><a href="#继承、封装、多态" class="headerlink" title="继承、封装、多态"></a>继承、封装、多态</h3><p>例子来喽：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    面向对象（ECMA6以后）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dog</span>(<span class="params">&#123;name, type, age&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//this = new Object();</span></span><br><span class="line">    <span class="comment">//添加属性</span></span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">Dog.prototype = &#123;</span><br><span class="line">    run:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">"I am"</span> + <span class="keyword">this</span>.name + <span class="string">" aged "</span> + <span class="keyword">this</span>.age )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    分类更加细分的构造函数  继承</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Teddy</span>(<span class="params">&#123;name, age, color&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//1.继承父一级构造函数的所有属性</span></span><br><span class="line">    Dog.call(<span class="keyword">this</span>, &#123;</span><br><span class="line">        name:name,</span><br><span class="line">        age:age</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">    <span class="comment">//return this;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Teddy.prototype = Dog.prototype;  非常错误的写法,这相当于赋值Dog类的prototype给Teddy类，而不是添加在Teddy类的prototype上</span></span><br><span class="line"><span class="comment">// Teddy.prototype = Dog.prototype;</span></span><br><span class="line"><span class="comment">//正确写法</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    原型链继承</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> funcName <span class="keyword">in</span> Dog.prototype)&#123;</span><br><span class="line">    Teddy.prototype[funcName] = Dog.prototype[funcName];</span><br><span class="line">&#125;</span><br><span class="line">Teddy.prototype.showColor = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="keyword">this</span>.color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> xiaobai = <span class="keyword">new</span> Teddy(&#123;</span><br><span class="line">    name:<span class="string">"xiaobai"</span>,</span><br><span class="line">    color:<span class="string">"white"</span>,</span><br><span class="line">    age:<span class="number">6</span></span><br><span class="line">&#125;)</span><br><span class="line">alert(xiaobai.color)</span><br><span class="line"><span class="comment">// xiaobai.run();//me:不继承方法</span></span><br><span class="line"></span><br><span class="line">xiaobai.run();<span class="comment">//现在可以了</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//重写方法</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    只会在子一级生效，并不会影响到父一级构造函数的方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    继承和多态是同一件事的两种完全不同侧重</span></span><br><span class="line"><span class="comment">    继承：侧重是从父一级的构造函数，继承到的属性和方法。</span></span><br><span class="line"><span class="comment">    多态：侧重是，子一级自己重写和新增的属性和方法。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Teddy.prototype.run = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"I am"</span> + <span class="keyword">this</span>.name + <span class="string">" aged "</span> + <span class="keyword">this</span>.age + <span class="string">" color:"</span> + <span class="keyword">this</span>.color );</span><br><span class="line">&#125;</span><br><span class="line">xiaobai.run();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    构造函数构造出来的对象，有一个属性__proto__,指向构造出这个对象的构造函数的原型</span></span><br><span class="line"><span class="comment">    __proto__关键字</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">alert(xiaobai.__proto__ == Teddy.prototype);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    instanof关键字</span></span><br><span class="line"><span class="comment">    功能：判断一个对象是否是由这个构造函数构造出来的。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">alert(xiaobai <span class="keyword">instanceof</span> Teddy);</span><br><span class="line">alert(xiaobai <span class="keyword">instanceof</span> <span class="built_in">Object</span>);</span><br></pre></td></tr></table></figure>

<p>ECAM6还有Class，暂时留白</p>
]]></content>
  </entry>
  <entry>
    <title>JavaScript☞正则表达式的应用</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h1 id="JavaScript☞正则表达式的应用"><a href="#JavaScript☞正则表达式的应用" class="headerlink" title="JavaScript☞正则表达式的应用"></a>JavaScript☞正则表达式的应用</h1><h2 id="认识正则表达式"><a href="#认识正则表达式" class="headerlink" title="认识正则表达式"></a>认识正则表达式</h2><p>创建正则表达式的方式：</p>
<p>​        1.通过new去声明正则表达式</p>
<p>​          第一个参数：正则表达式的主体</p>
<p>​          第二个参数：修饰符</p>
<p>​          i：忽略大小写</p>
<p>​          g：全局匹配</p>
<p>​          【注】修饰符没有顺序</p>
<p>​        2.省略new运算符去声明正则表达式</p>
<p>​        3.通过常量赋值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> box1 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"hello"</span>, <span class="string">"i"</span>);</span><br><span class="line"><span class="keyword">var</span> box2 = <span class="built_in">RegExp</span>(<span class="string">"hello"</span>, <span class="string">"ig"</span>); </span><br><span class="line"><span class="keyword">var</span> box3 = <span class="regexp">/hello/gi</span>;</span><br></pre></td></tr></table></figure>

<p>​      正则表达式对象只有两个方法</p>
<p>​        test</p>
<p>​          格式：正则.test(字符串)</p>
<p>​          功能：在字符串中匹配这个正则是否存在</p>
<p>​          返回值：如果匹配成功返回true, 匹配失败返回false</p>
<p>​        exec</p>
<p>​          格式：正则.exec(字符串)</p>
<p>​          功能：在字符串中匹配这个正则是否存在</p>
<p>​          返回值：返回匹配到的串， 匹配成功，返回一个装有字符串的数组</p>
<p>​                      匹配失败，返回null</p>
<p><strong>在字符串中使用正则表达式</strong></p>
<p>​      字符串的方法</p>
<p>​      match</p>
<p>​        格式：字符串.match(正则)</p>
<p>​        功能：在字符串匹配是否有符合的正则表达式</p>
<p>​        返回值：返回匹配到的串， 匹配成功，返回一个装有字符串的数组</p>
<p>​                      匹配失败，返回null</p>
<p>​      replace</p>
<p>​        格式：字符串.replace(oldStr, newStr)</p>
<p>​        功能：用newStr将oldStr替换</p>
<p>​        返回值：替换成功的新字符串</p>
<p>​      split</p>
<p>​        格式：字符串.split(分隔符/正则)//不必使用全局匹配，但是加上也可以，不会报错</p>
<p>​        功能：用分割符将字符串进行分割</p>
<p>​        返回值：分割剩下的子串组成的数组</p>
<p>​      search</p>
<p>​        格式：字符串.search(子串/正则)</p>
<p>​        功能：找到符合条件的子串第一次出现的位置</p>
<p>​        返回值：</p>
<p>​          如果找到， 返回&gt;=0的下标</p>
<p>​          否则，返回-1</p>
<p><strong>元字符</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">元字符：</span></span><br><span class="line"><span class="comment">                在正则表达式中有特殊含义的字符</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            单个数字和字符的元字符</span></span><br><span class="line"><span class="comment">                .           匹配单个任意字符</span></span><br><span class="line"><span class="comment">                []          匹配单个范围内的字符</span></span><br><span class="line"><span class="comment">                    e.g.[0-9] 匹配0-9任意单个数字 </span></span><br><span class="line"><span class="comment">                [^范围]     匹配任意一个非该范围字符         </span></span><br><span class="line"><span class="comment">                \w          字母数字下划线 </span></span><br><span class="line"><span class="comment">                \W          匹配除数字字母下划线</span></span><br><span class="line"><span class="comment">                \d          匹配单个数字    等价于[0-9]</span></span><br><span class="line"><span class="comment">                \D          匹配非数字</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            重复字符   设 x（任意单个字符）</span></span><br><span class="line"><span class="comment">                x?      匹配一个或0个</span></span><br><span class="line"><span class="comment">                x+      匹配至少一个x字符</span></span><br><span class="line"><span class="comment">                x*      匹配任意个x字符（包栝0个）</span></span><br><span class="line"><span class="comment">                x&#123;m,n&#125;  双闭区间m-n个</span></span><br><span class="line"><span class="comment">                x&#123;n&#125;    必须匹配n个x字符</span></span><br><span class="line"><span class="comment">                (xyz)+  小括号括起来的部分当做单个字符处理  </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            空白字符 </span></span><br><span class="line"><span class="comment">                \s      匹配任意单个的空白字符</span></span><br><span class="line"><span class="comment">                \S      匹配任意单个的非空白字符</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            锚字符</span></span><br><span class="line"><span class="comment">                ^       写在正则最前，代表行首匹配</span></span><br><span class="line"><span class="comment">                $       写在正则最后，代表行尾匹配</span></span><br><span class="line"><span class="comment">                ^...$   既在行首又在行尾，me：就是唯一呗</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript☞阻止默认行为的例子</title>
    <url>/2020/07/20/JavaScript%E2%98%9E%E9%98%BB%E6%AD%A2%E9%BB%98%E8%AE%A4%E8%A1%8C%E4%B8%BA%E7%9A%84%E4%BE%8B%E5%AD%90/</url>
    <content><![CDATA[<h1 id="JavaScript☞阻止默认行为的例子"><a href="#JavaScript☞阻止默认行为的例子" class="headerlink" title="JavaScript☞阻止默认行为的例子"></a>JavaScript☞阻止默认行为的例子</h1><ol>
<li><p>阻止右键默认菜单，自定义右键菜单</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>阻止默认行为1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        *&#123;<span class="attribute">margin</span>: <span class="number">0</span>;<span class="attribute">padding</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#menu</span>&#123;<span class="attribute">width</span>: <span class="number">200px</span>;<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">0.356</span>);<span class="attribute">display</span>: none;<span class="attribute">position</span>: absolute;&#125;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#menu</span> <span class="selector-tag">div</span>&#123;<span class="attribute">color</span>: <span class="number">#fff</span>;<span class="attribute">padding</span>: <span class="number">1em</span>;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.425</span>);&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//官方的右键菜单</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.oncontextmenu = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">            /*</span><br><span class="line">                实现自定义的右键菜单，鼠标按下</span><br><span class="line">                按下的是右键，在右键这个位置显示菜单</span><br><span class="line">                如果是按下别的键，菜单消失</span><br><span class="line">            */</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oMenu = <span class="built_in">document</span>.getElementById(<span class="string">"menu"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line">                if(e.button == 2)&#123;</span><br><span class="line"><span class="actionscript">                    oMenu.style.display = <span class="string">"block"</span>;</span></span><br><span class="line"><span class="actionscript">                    oMenu.style.left = e.clientX + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                    oMenu.style.top = e.clientY + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    oMenu.style.display = <span class="string">"none"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"menu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>option1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>option2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>option3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>option4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>option5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>阻止a标签链接直接跳转，先询问一下</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>阻止默认行为2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            阻止超链接的默认行为</span><br><span class="line">                1.简陋的阻止默认行为的方式</span><br><span class="line"><span class="actionscript">                    缺点：运行到<span class="keyword">return</span>，后续的内容就执行不到了。</span></span><br><span class="line">                2.规范的方式</span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> a1 = <span class="built_in">document</span>.getElementById(<span class="string">"a1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// a1.onclick = function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     return confirm("你确定要离开当前页面吗？");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125; </span></span></span><br><span class="line"><span class="actionscript">            a1.onclick = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//confirm("你确定要离开当前页面吗？")确定返回true反之返回false</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span>(!confirm(<span class="string">"你确定要离开当前页面吗？"</span>))&#123;</span></span><br><span class="line">                    preDef(e);</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                alert(<span class="string">"后续的操作！"</span>);</span></span><br><span class="line">            &#125;                            </span><br><span class="line">        &#125;</span><br><span class="line">        /*</span><br><span class="line">            编写一个跨浏览器阻止超链接默认行为的函数</span><br><span class="line"></span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">preDef</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line">            if(e.preventDefault)&#123;</span><br><span class="line">                e.preventDefault();</span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">window</span>.event.returnValue = <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"a1"</span> <span class="attr">href</span>=<span class="string">"https://www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Math对象的方法</title>
    <url>/2020/07/20/Math%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="JS的Math对象的方法"><a href="#JS的Math对象的方法" class="headerlink" title="JS的Math对象的方法"></a>JS的Math对象的方法</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Math</span>.random() <span class="comment">//返回0-1间的随机数</span></span><br><span class="line"><span class="built_in">Math</span>.max(num1, num2...) <span class="comment">//返回较大的数</span></span><br><span class="line"><span class="built_in">Math</span>.min(num1, num2...) <span class="comment">//返回较小的数</span></span><br><span class="line"><span class="built_in">Math</span>.abs(num) <span class="comment">// 绝对值</span></span><br><span class="line"><span class="built_in">Math</span>.round() <span class="comment">//四舍五入成整数，只看小数点后一位</span></span><br><span class="line"><span class="built_in">Math</span>.ceil() <span class="comment">// 向上取整</span></span><br><span class="line"><span class="built_in">Math</span>.floor() <span class="comment">// 向下取整</span></span><br><span class="line"><span class="built_in">Math</span>.pow(x, y) <span class="comment">// x的y次方</span></span><br><span class="line"><span class="built_in">Math</span>.sqrt(num) <span class="comment">//开平方</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="built_in">Math</span>.sin() </span><br><span class="line"><span class="built_in">Math</span>.cos()</span><br><span class="line">   <span class="comment">/* 参数均为弧度 Math.PI = 180度</span></span><br><span class="line"><span class="comment">    Math.PI/180 一弧度*/</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript定时器实现秒表</title>
    <url>/2020/07/20/JavaScript%E5%AE%9A%E6%97%B6%E5%99%A8%E5%AE%9E%E7%8E%B0%E7%A7%92%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="JavaScript定时器实现秒表"><a href="#JavaScript定时器实现秒表" class="headerlink" title="JavaScript定时器实现秒表"></a>JavaScript定时器实现秒表</h1><p>时：分：秒    形式的秒表</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>秒表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line">            height: 300px;</span><br><span class="line">            width: 200px;</span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            background-color: coral;</span><br><span class="line">        &#125;</span><br><span class="line">        button&#123;</span><br><span class="line">            display: block;</span><br><span class="line">            margin: 30px auto;</span><br><span class="line">            height: 3em;</span><br><span class="line">            width: 100px;</span><br><span class="line">            background-color: black;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#hour</span>&#123;</span></span><br><span class="line">            margin-left: 4em;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.onload = func()&#123;</span></span><br><span class="line">                写在这里的代码，先加载页面，后执行</span><br><span class="line">            &#125;</span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="comment">//两位不变，一位的或变成 0X：0X：0X 的形式</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">toDouble</span><span class="params">(num)</span></span>&#123;</span></span><br><span class="line">            if(num &lt; 10)&#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="string">"0"</span> + num;</span></span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> num;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//获取结点，包装成函数</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">id</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> i = <span class="number">0</span>;<span class="comment">//总秒数</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> isRunning = <span class="literal">false</span>;<span class="comment">//记录定时器状态</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//启动定时器函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">startFunc</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                timer = setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">                        i++;</span><br><span class="line"><span class="javascript">                        $(<span class="string">"sec"</span>).innerHTML = toDouble(i%<span class="number">60</span>);</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">"min"</span>).innerHTML = toDouble(<span class="built_in">parseInt</span>(i/<span class="number">60</span>)%<span class="number">60</span>);</span></span><br><span class="line"><span class="javascript">                        $(<span class="string">"hour"</span>).innerHTML = toDouble(<span class="built_in">parseInt</span>(i/<span class="number">3660</span>)%<span class="number">60</span>);</span></span><br><span class="line">                    &#125;, 1000)</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//关闭定时器函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">pauseFunc</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">                clearInterval(timer);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//给按钮设置点击函数</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"btn1"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">                if(!isRunning)&#123;</span><br><span class="line"><span class="javascript">                    $(<span class="string">"btn1"</span>).innerHTML = <span class="string">"暂停"</span>;</span></span><br><span class="line">                    startFunc();</span><br><span class="line">                    isRunning = !isRunning;</span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">"btn1"</span>).innerHTML = <span class="string">"开始"</span>;</span></span><br><span class="line">                    pauseFunc();</span><br><span class="line">                    isRunning = !isRunning;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            $(<span class="string">"reset"</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">                clearInterval(timer);</span><br><span class="line">                i = 0;</span><br><span class="line"><span class="javascript">                $(<span class="string">"sec"</span>).innerHTML = <span class="string">"00"</span>;                </span></span><br><span class="line"><span class="javascript">                $(<span class="string">"min"</span>).innerHTML = <span class="string">"00"</span>;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"hour"</span>).innerHTML = <span class="string">"00"</span>;</span></span><br><span class="line"><span class="actionscript">                isRunning = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"btn1"</span>).innerHTML = <span class="string">"开始"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"hour"</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"min"</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"sec"</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"reset"</span>&gt;</span>复位<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>demo1</title>
    <url>/2020/08/02/demo1/</url>
    <content><![CDATA[<blockquote>
<p>ASCII码对照表</p>
</blockquote>
<p><img src="https://wx1.sbimg.cn/2020/08/04/PfoAl.png" alt="PfoAl.png"></p>
]]></content>
  </entry>
  <entry>
    <title>demoTypora</title>
    <url>/2020/08/02/demoTypora/</url>
    <content><![CDATA[<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"hewwo "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript通过定时器实现实时显示当前时间（精确到秒）</title>
    <url>/2020/07/20/JavaScript%E9%80%9A%E8%BF%87%E5%AE%9A%E6%97%B6%E5%99%A8%E5%AE%9E%E7%8E%B0%E5%AE%9E%E6%97%B6%E6%98%BE%E7%A4%BA%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4%EF%BC%88%E7%B2%BE%E7%A1%AE%E5%88%B0%E7%A7%92%EF%BC%89/</url>
    <content><![CDATA[<h1 id="JavaScript通过定时器和Date-实现实时显示当前时间（精确到秒）"><a href="#JavaScript通过定时器和Date-实现实时显示当前时间（精确到秒）" class="headerlink" title="JavaScript通过定时器和Date()实现实时显示当前时间（精确到秒）"></a>JavaScript通过定时器和Date()实现实时显示当前时间（精确到秒）</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>实时显示当前时间<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line">            border: 3px solid black;</span><br><span class="line">            font-size: 2em;</span><br><span class="line">            padding: 2em;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">showTime</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//使用Date对象方法获取时间</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> year = d.getFullYear();</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> month = toDouble(d.getMonth() + <span class="number">1</span>);<span class="comment">//getMouth方法获得的是0-11	0是月依次后推</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> date = toDouble(d.getDate());</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> week = d.getDay();<span class="comment">//0~6 0是周日</span></span></span><br><span class="line">            </span><br><span class="line">            week = numOfChinese(week);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> hour = toDouble(d.getHours());</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> min = toDouble(d.getMinutes());</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> sec = toDouble(d.getSeconds());</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> str = year + <span class="string">"年"</span> + month + <span class="string">"月"</span> + date + <span class="string">"日"</span>+ <span class="string">"  周"</span> + week + <span class="string">"  "</span> + hour + <span class="string">"时"</span> + min + <span class="string">"分"</span> + sec + <span class="string">"秒"</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> str;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//将数字转为中文</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">numOfChinese</span><span class="params">(num)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> arr = [<span class="string">"日"</span>, <span class="string">"一"</span>, <span class="string">"二"</span>, <span class="string">"三"</span>, <span class="string">"四"</span>, <span class="string">"五"</span>, <span class="string">"六"</span>];</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> arr[num];</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//（针对时分秒）时间格式为		OX时OX分OX秒</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">toDouble</span><span class="params">(num)</span></span>&#123;</span></span><br><span class="line">            if(num &lt; 10)&#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="string">"0"</span> + num;</span></span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> num;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line">            oDiv.innerHTML = showTime();</span><br><span class="line">            </span><br><span class="line">        &#125;, 1000);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span>显示当前时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>hexo博客框架的使用</title>
    <url>/2020/07/18/hexo%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="hexo博客框架的使用"><a href="#hexo博客框架的使用" class="headerlink" title="hexo博客框架的使用"></a>hexo博客框架的使用</h1><p>准备工作：</p>
<p>安装node，git，注册申请GitHub的账号，过程中还要给GitHub配置ssh密匙</p>
<p>接下来就要开始安装了</p>
]]></content>
  </entry>
  <entry>
    <title>hexo图片的显示问题</title>
    <url>/2020/06/17/hexo%E5%9B%BE%E7%89%87%E7%9A%84%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="问题：本地图片在博客上显示不了（hexo博客部署在GitHub上）"><a href="#问题：本地图片在博客上显示不了（hexo博客部署在GitHub上）" class="headerlink" title="问题：本地图片在博客上显示不了（hexo博客部署在GitHub上）"></a>问题：本地图片在博客上显示不了（hexo博客部署在GitHub上）</h1><p>使用img标签</p>
<ol>
<li><p>在创建.md文件时使用语句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">"filename"</span></span><br></pre></td></tr></table></figure>

<p>在创建filename.md文件的同时会生成一个filename文件夹，图片可以放在这个文件夹中</p>
</li>
<li><p>在md文件中使用img标签</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"filename.jpg/png"</span> &gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
<p>这样就解决了。</p>
]]></content>
  </entry>
  <entry>
    <title>history对象</title>
    <url>/2020/07/20/history%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="history对象"><a href="#history对象" class="headerlink" title="history对象"></a>history对象</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>history对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line"><span class="javascript">            history对象 <span class="built_in">window</span>.history 掌管当前窗口（注意不是浏览器）历史记录（只要加载url不一样就会产生历史记录）</span></span><br><span class="line">                属性：</span><br><span class="line">                    history.length 输出当前窗口历史记录</span><br><span class="line">                方法：</span><br><span class="line"><span class="actionscript">                    history.back() <span class="comment">//返回上一条历史记录</span></span></span><br><span class="line"><span class="actionscript">                    history.forward()<span class="comment">//前进到下一条历史记录</span></span></span><br><span class="line">                    history.go()</span><br><span class="line">                        参数：</span><br><span class="line">                            0 刷新当前页面</span><br><span class="line">                            正整数 前进n条记录</span><br><span class="line">                            负整数 后退n条记录</span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="comment">// alert(history.go());</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.baidu.com/"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"alert(history.length);"</span>&gt;</span>获取历史记录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"history.back();"</span>&gt;</span>返回上一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"history.forward();"</span>&gt;</span>前进一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"history.go(0)"</span>&gt;</span>history.go()<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>git的使用</title>
    <url>/2020/07/20/git%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="git的使用"><a href="#git的使用" class="headerlink" title="git的使用"></a>git的使用</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>index<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            1.cd 路径   进入当前目录</span><br><span class="line">            2.配置git基本操作</span><br><span class="line">                【注】没有消息就是好消息</span><br><span class="line">            </span><br><span class="line">            3.git init      在本地进行初始化（建立暂存区）</span><br><span class="line">                .git 文件存储当前项目的所有版本信息</span><br><span class="line"></span><br><span class="line">            4.工作区 =&gt; 暂存区</span><br><span class="line">                git add 文件名</span><br><span class="line">                git add *       提交所有文件</span><br><span class="line"></span><br><span class="line"><span class="actionscript">                git commit -m <span class="string">"这次提交的描述"</span></span></span><br><span class="line"></span><br><span class="line">            5.查看当前工作区的状态</span><br><span class="line">                git status</span><br><span class="line">            6.从暂存区恢复文件到工作区</span><br><span class="line">                git checkout 文件名</span><br><span class="line">            7.查看工作区和暂存区版本的区别</span><br><span class="line">                git diff</span><br><span class="line">            8.clear 清屏操作</span><br><span class="line"></span><br><span class="line">            9.git log</span><br><span class="line">                查看已经提交到暂存区的历史版本</span><br><span class="line">            </span><br><span class="line">            10.恢复文件到指定的某一个版本</span><br><span class="line">                git reset --hard 版本号</span><br><span class="line">            </span><br><span class="line">            11.生成ssh密匙</span><br><span class="line"><span class="actionscript">                ssh-keygen -t rsa -C <span class="string">"你GitHub的注册邮箱的地址"</span></span></span><br><span class="line">            </span><br><span class="line">            windows电脑查找文件：我的电脑 =&gt; 用户 =&gt; 用户名文件夹 =&gt; .ssh(隐藏文件) =&gt; id_rsa.pub(存有密匙)</span><br><span class="line"></span><br><span class="line">            12.GitHub账户配置密匙：登录网站手动添加密匙</span><br><span class="line"></span><br><span class="line">            13.暂存区 =&gt; 远程仓库</span><br><span class="line">                git git remote add origin 仓库地址</span><br><span class="line"><span class="actionscript">                    e.g.    git git remote add origin https:<span class="comment">//github.com/Dopphu/testDemo.git</span></span></span><br><span class="line">                git push -u origin master</span><br><span class="line">            【注】提交过程可能需要你输入用户名，密码。</span><br><span class="line"></span><br><span class="line">            14.git clone</span><br><span class="line">                从远程仓库克隆项目到本地</span><br><span class="line">            </span><br><span class="line">            15.git pull</span><br><span class="line">                从远程仓库同步本地代码</span><br><span class="line">        */</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>第一个文件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>npm命令下载速度缓慢的解决办法</title>
    <url>/2020/07/18/npm%E5%91%BD%E4%BB%A4%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E7%BC%93%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<h1 id="npm命令下载速度缓慢的解决办法"><a href="#npm命令下载速度缓慢的解决办法" class="headerlink" title="npm命令下载速度缓慢的解决办法"></a>npm命令下载速度缓慢的解决办法</h1><h2 id="使用淘宝镜像"><a href="#使用淘宝镜像" class="headerlink" title="使用淘宝镜像"></a>使用淘宝镜像</h2><ul>
<li>执行这行命令</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> -g registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/07/18/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>严格模式片头</title>
    <url>/2020/07/20/%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F%E7%89%87%E5%A4%B4/</url>
    <content><![CDATA[<h1 id="严格模式片头"><a href="#严格模式片头" class="headerlink" title="严格模式片头"></a>严格模式片头</h1><p> 严格模式：写在哪个作用域下，在哪个作用域下生效。</p>
<p>​        “use strict”;</p>
<p>​       【注】尽量不要将严格模式写在全局（me：引入别人写的js会受限制）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dmeo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="meta">   "use strict"</span>;</span><br><span class="line">    num = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//alert(num);这行语句取消注释后运行则会报错：Uncaught ReferenceError: num is not defined</span></span><br><span class="line">&#125;</span><br><span class="line">demo();<span class="comment">//已经不在num的作用域了</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>JavaScript简单的打砖块</title>
    <url>/2020/07/20/JavaScript%E7%AE%80%E5%8D%95%E7%9A%84%E6%89%93%E7%A0%96%E5%9D%97/</url>
    <content><![CDATA[<h1 id="JavaScript简单的打砖块"><a href="#JavaScript简单的打砖块" class="headerlink" title="JavaScript简单的打砖块"></a>JavaScript简单的打砖块</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>打砖块<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 600<span class="selector-tag">px</span>;<span class="selector-tag">height</span>: 600<span class="selector-tag">px</span>;<span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;<span class="selector-tag">margin</span>: 100<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;<span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#ball</span>&#123;</span></span><br><span class="line">            width: 20px;height: 20px;background-color: brown;border-radius: 50%;position: absolute;bottom: 20px;left: 310px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#bat</span>&#123;</span></span><br><span class="line">            width: 120px;height: 20px;position: absolute;bottom: 0px;left: 250px;background-color: coral;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#brick</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line">            width: 98px;height: 18px;border: 1px solid black;float: left;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBall = <span class="built_in">document</span>.getElementById(<span class="string">"ball"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBat = <span class="built_in">document</span>.getElementById(<span class="string">"bat"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBrick = <span class="built_in">document</span>.getElementById(<span class="string">"brick"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> aBricks = oBrick.getElementsByTagName(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// </span></span></span><br><span class="line">            dragBat(oBat);</span><br><span class="line">            createBrick(60);</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> speedX = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">5</span>) + <span class="number">3</span>; </span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> speedY = -(<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">5</span>) + <span class="number">3</span>); </span></span><br><span class="line"><span class="actionscript">            setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                oBall.style.left = oBall.offsetLeft + speedX + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                oBall.style.top = oBall.offsetTop + speedY + <span class="string">"px"</span>;</span></span><br><span class="line">                if(oBall.offsetLeft &gt;= 580 || oBall.offsetLeft &lt;= 0)&#123;</span><br><span class="line">                    speedX *= -1;</span><br><span class="line">                &#125;</span><br><span class="line">                if(oBall.offsetTop &lt;= 0)&#123;</span><br><span class="line">                    speedY *= -1;</span><br><span class="line">                &#125;</span><br><span class="line">                if(oBall.offsetTop &gt;= 580)&#123;</span><br><span class="line"><span class="javascript">                    <span class="built_in">window</span>.location.reload();</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"GAME OVER!"</span>);</span></span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">                if(konck(oBall, oBat))&#123;</span><br><span class="line">                    speedY *= -1;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 小球和砖块发生碰撞</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; aBricks.length; i++)&#123;</span></span><br><span class="line">                    if(konck(oBall, aBricks[i]))&#123;</span><br><span class="line">                        oBrick.removeChild(aBricks[i]);</span><br><span class="line">                        speedY *= -1;</span><br><span class="line"><span class="actionscript">                        <span class="keyword">break</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,30);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">dragBat</span><span class="params">(node)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            node.onmousedown = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> offsetX = e.clientX - node.offsetLeft;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> e = ev || winodw.event;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">var</span> l = e.clientX - offsetX;</span></span><br><span class="line">                    if(l &lt; 0)&#123;</span><br><span class="line">                        l = 0;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(l &gt; 480)&#123;</span><br><span class="line">                        l = 480;</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="actionscript">                    node.style.left = l + <span class="string">"px"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//创建砖块 n的意思是创建n个砖块</span></span></span><br><span class="line">        /*</span><br><span class="line">            文档流的转换</span><br><span class="line">            相对定位转绝对定位</span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">createBrick</span><span class="params">(n)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBrick = <span class="built_in">document</span>.getElementById(<span class="string">"brick"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> node = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span></span><br><span class="line">                node.style.backgroundColor = randomColor();</span><br><span class="line">                oBrick.appendChild(node);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> aBricks = oBrick.getElementsByTagName(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i &lt; aBricks.length; i++)&#123;</span></span><br><span class="line"><span class="actionscript">                aBricks[i].style.left = aBricks[i].offsetLeft + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                aBricks[i].style.top = aBricks[i].offsetTop + <span class="string">"px"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; aBricks.length; i++)&#123;</span></span><br><span class="line"><span class="actionscript">                aBricks[i].style.position = <span class="string">"absolute"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">randomColor</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> str = <span class="string">`rgb(<span class="subst">$&#123;<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">256</span>)&#125;</span>,<span class="subst">$&#123;<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">256</span>)&#125;</span>,<span class="subst">$&#123;<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">256</span>)&#125;</span>)`</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> str;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">konck</span><span class="params">(node1, node2)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> l1 = node1.offsetLeft;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> r1 = node1.offsetLeft + node1.offsetWidth;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> t1 = node1.offsetTop;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> b1 = node1.offsetTop + node1.offsetHeight;</span></span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> l2 = node2.offsetLeft;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> r2 = node2.offsetLeft + node2.offsetWidth;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> t2 = node2.offsetTop;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> b2 = node2.offsetTop + node2.offsetHeight;</span></span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml">            if(l1 &gt; r2 || r1 <span class="tag">&lt; <span class="attr">l2</span> || <span class="attr">t1</span> &gt;</span> b2 || b1 <span class="tag">&lt; <span class="attr">t2</span> )&#123;</span></span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"brick"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"ball"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bat"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>web初始</title>
    <url>/2020/08/02/web%E5%88%9D%E5%A7%8B/</url>
    <content><![CDATA[<h1 id="第一天作业"><a href="#第一天作业" class="headerlink" title="第一天作业"></a>第一天作业</h1><h2 id="1-熟悉HTML文件结构，并练习基本标签的使用"><a href="#1-熟悉HTML文件结构，并练习基本标签的使用" class="headerlink" title="1.熟悉HTML文件结构，并练习基本标签的使用"></a>1.熟悉HTML文件结构，并练习基本标签的使用</h2><pre><code>&lt;!doctype html&gt;
    &lt;html&gt;
    &lt;head&gt; 

        &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf=8&quot; /&gt;

        &lt;meta name=&quot;keyword&quot; content=&quot;...&quot; /&gt;
        &lt;meta name=&quot;description&quot; content=&quot;...&quot; /&gt;
        &lt;link rel=&quot;shortcut icon&quot; href=&quot;图片路径+文件名&quot; type=&quot;image/x-icon&quot; /&gt;
        &lt;title&gt;...&lt;/title&gt;
        &lt;link rel=&quot;stylesheet&quot; href=&quot;外部样式文件名&quot; /&gt;
        &lt;style type=&quot;text/css&gt;
        样式设置...
        &lt;/style&gt;
    &lt;/head&gt;

    &lt;body&gt;
        网页主题内容（略）
    &lt;/body&gt;
    &lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;
        脚本代码...
    &lt;/script&gt;
&lt;/html&gt;</code></pre><h2 id="2-熟悉W3C规范，熟悉语义化标签，整理每个标签对应的语义环境"><a href="#2-熟悉W3C规范，熟悉语义化标签，整理每个标签对应的语义环境" class="headerlink" title="2.熟悉W3C规范，熟悉语义化标签，整理每个标签对应的语义环境"></a>2.熟悉W3C规范，熟悉语义化标签，整理每个标签对应的语义环境</h2><pre><code>w3c标准由结构（HTML），表现（CSS）和行为（JavaScript）三部分组成
w3c常见规范有：
    1）定义语言编码
        &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/javascript;charset=utf-8&quot;
    2）JavaScript定义
        &lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;
        脚本代码...
        &lt;/script&gt;
    3）CSS定义
        &lt;style type=&quot;text/css&gt;
            样式设置...
        &lt;/style&gt;
        为保证个浏览器的兼容性，在写CSS是请带上计量单位
    4）不要在注释内容中使用&quot;--&quot;
        &lt;!-- 注释内容 --&gt;(实在不行&quot;=&quot;也挺好看的)
    5）所有标签和属性的名字都要用小写
    6）所有的属性值必须用双引号引起来
    7）如果文档中要输出&gt;,&lt;和&amp;等，请使用实体转义符
        &lt;p&gt;&amp;gt;&amp;lt;&amp;amp;...&lt;/p&gt;
    8）要给所有的属性赋一个值,否则将属性名视为值本身
        &lt;img src=&quot;...&quot; alt=&quot;...&quot; /&gt;
        &lt;input type=&quot;text&quot; readonly /&gt;//相当于readonly=&quot;readonly&quot;
    9）所有的标签都必须要有一个相应的结束标记（标签必须要闭合）
        &lt;p&gt;...&lt;/p&gt;
        &lt;hr /&gt;
    10）所有的标签必须合理嵌套，不能出现嵌套交叉的情况
        &lt;div&gt;&lt;p&gt;...&lt;/div&gt;&lt;/p&gt;#出现交叉错误
    11）图片要添加有意义的alt的属性
    12）在form表单中增加lable标签，以增加用户体验效果</code></pre><h2 id="3-练习并测试HTML标签嵌套规则"><a href="#3-练习并测试HTML标签嵌套规则" class="headerlink" title="3.练习并测试HTML标签嵌套规则"></a>3.练习并测试HTML标签嵌套规则</h2><pre><code>略。</code></pre><h2 id="4-实现如图所示网页效果"><a href="#4-实现如图所示网页效果" class="headerlink" title="4.实现如图所示网页效果"></a>4.实现如图所示网页效果</h2><pre><code>略。</code></pre>]]></content>
  </entry>
  <entry>
    <title>关于字符串的一些例子01</title>
    <url>/2020/07/20/%E5%85%B3%E4%BA%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%8B%E5%AD%9001/</url>
    <content><![CDATA[<p>关于字符串的一些例子01</p>
<h2 id="产生n位数字验证码"><a href="#产生n位数字验证码" class="headerlink" title="产生n位数字验证码"></a>产生n位数字验证码</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">numTestCode</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">10</span>);</span><br><span class="line">        arr.push(num);</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="keyword">return</span> arr.join(<span class="string">""</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="n位数字或字母验证码"><a href="#n位数字或字母验证码" class="headerlink" title="n位数字或字母验证码"></a>n位数字或字母验证码</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">nlTestCode</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">    	<span class="keyword">var</span> arr = [];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; n;i++)&#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> num = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">123</span>);</span><br><span class="line">                <span class="keyword">if</span>((num &gt;= <span class="number">65</span> &amp;&amp; num &lt;= <span class="number">90</span>)||(num &gt;= <span class="number">97</span>&amp;&amp;num &lt;=<span class="number">122</span>))&#123;</span><br><span class="line">                    arr.push(<span class="built_in">String</span>.fromCharCode(num));</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(num &gt;= <span class="number">0</span> &amp;&amp; num &lt;= <span class="number">9</span>)&#123;</span><br><span class="line">                    arr.push(num);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.join(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="敏感词过滤"><a href="#敏感词过滤" class="headerlink" title="敏感词过滤"></a>敏感词过滤</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>敏感词过滤<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        textarea&#123;</span><br><span class="line">            width: 100px;height: 100px;border: 1px solid black;</span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            border: 1px dotted green;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            敏感词过滤</span><br><span class="line"></span><br><span class="line">            表单元素，获取其中内容，通过value的属性</span><br><span class="line">            双标签节点 innerHTML属性，获取标签间的内容</span><br><span class="line"></span><br><span class="line">            要求：</span><br><span class="line">                1.敏感词过滤</span><br><span class="line"><span class="actionscript">                <span class="number">2.</span>将敏感词换成* <span class="comment">//用正则过滤</span></span></span><br><span class="line">                replace()</span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> arr = [<span class="regexp">/靠/ig</span>, /tmd/ig, /nm/ig];</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">binClick</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oTxt = <span class="built_in">document</span>.getElementById(<span class="string">"txt1"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oMsg = <span class="built_in">document</span>.getElementById(<span class="string">"msg"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> oValue = oTxt.value;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;arr.length;i++)&#123;</span></span><br><span class="line"><span class="actionscript">                oValue = oValue.replace(arr[i],<span class="string">"*"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            oTxt.value = <span class="string">""</span>;</span></span><br><span class="line">            oMsg.innerHTML = oValue</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"txt1"</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"binClick();"</span> &gt;</span>发布<span class="tag">&lt;/<span class="name">button</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"msg"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="字符串的表单练习"><a href="#字符串的表单练习" class="headerlink" title="字符串的表单练习"></a>字符串的表单练习</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=w, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>字符串_表单验证<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: lightblue;</span><br><span class="line">            border: 1px solid black;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin: 10px auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span> <span class="selector-tag">input</span>&#123;</span></span><br><span class="line">            width: 180px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            font-size: 18px;</span><br><span class="line">            margin-top: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span> <span class="selector-tag">span</span>&#123;</span></span><br><span class="line">            font-size: 10px;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            事件驱动函数：</span><br><span class="line">                    onclick 点击</span><br><span class="line">                    onblur  失去焦点</span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">func</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert("失去焦点！");</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oUsesrname = <span class="built_in">document</span>.getElementById(<span class="string">"username"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oUsesrnameSpan = <span class="built_in">document</span>.getElementById(<span class="string">"username_span"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> oValue = oUsesrname.value;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//进行判断</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            if((oValue.length <span class="tag">&lt; <span class="attr">6</span> &amp;&amp; <span class="attr">oValue.length</span> &gt;</span> 0)||oValue &gt;18)&#123;</span></span></span><br><span class="line"><span class="actionscript">                oUsesrnameSpan.innerHTML = <span class="string">"长度不符合要求"</span></span></span><br><span class="line">            &#125;;</span><br><span class="line">            if(oValue.length &gt;= 6 &amp;&amp; oValue.length &lt;= 18)&#123;</span><br><span class="line"><span class="actionscript">                oUsesrnameSpan.innerHTML = <span class="string">"输入正确！"</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; oValue.length;i++)&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">if</span>(!((oValue[i]&gt;=<span class="number">0</span> &amp;&amp; oValue[i] &lt;= <span class="number">9</span>)||(oValue[i]==<span class="string">"_"</span>)||(oValue[i]&gt;=<span class="string">'a'</span>&amp;&amp;oValue[i]&lt;=<span class="string">'z'</span>)||(oValue[i]&gt;=<span class="string">"A"</span> &amp;&amp; oValue[i] &lt;=<span class="string">"Z"</span> )))&#123;</span></span><br><span class="line"><span class="actionscript">                        oUsesrnameSpan.innerHTML = <span class="string">"含有非法字符，请检查字符是否由数字、字母、下划线组成"</span>;</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">break</span>;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;;</span><br><span class="line">            if(oValue.length == 0)&#123;</span><br><span class="line"><span class="actionscript">                    oUsesrnameSpan.innerHTML = <span class="string">"6~18个字符，可使用数字、字母、下划线、需要以字母开头"</span>;</span></span><br><span class="line">            &#125;;   </span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"用户名"</span> <span class="attr">onblur</span>=<span class="string">"func();"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"username_span"</span>&gt;</span>6~18个字符，可使用数字、字母、下划线、需要以字母开头<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"密码"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>关于图床</title>
    <url>/2020/08/06/%E5%85%B3%E4%BA%8E%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h1 id="关于图床"><a href="#关于图床" class="headerlink" title="关于图床"></a>关于图床</h1><p>免费的：（免费的弊端就是不稳定，生杀大权握在别人手中）</p>
<p>公益图床：<a href="https://sbimg.cn" target="_blank" rel="noopener">https://sbimg.cn</a> （这个url引用的速度个人感觉比路过图床快一些）</p>
<p>路过图床：<a href="https://imgchr.com/" target="_blank" rel="noopener">https://imgchr.com/</a></p>
]]></content>
  </entry>
  <entry>
    <title>事件对象</title>
    <url>/2020/07/20/%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h1><p><strong>事件绑定</strong></p>
<p>元素节点.on + 事件类型 = 匿名函数;</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">oBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//函数体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>【注】系统会在事件绑定一旦完成的时候，生成一个事件对象</p>
<p><strong>下面获取事件对象</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn1"</span>);<span class="comment">//假设有这么一个按钮，嘻嘻</span></span><br><span class="line">    <span class="comment">// oBtn.onclick = show;</span></span><br><span class="line">    oBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//这种通过形参拿事件对象的方式IE8以下不兼容。 IE8以下 window.event;</span></span><br><span class="line">        <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;<span class="comment">//兼容处理</span></span><br><span class="line">        alert(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>事件对象的属性</strong></p>
<ol>
<li><p>鼠标事件</p>
<p>button属性</p>
<table>
<thead>
<tr>
<th align="center">button属性的值</th>
<th align="center">鼠标的键</th>
</tr>
</thead>
<tbody><tr>
<td align="center">0</td>
<td align="center">左键</td>
</tr>
<tr>
<td align="center">1</td>
<td align="center">滚轮</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">右键</td>
</tr>
</tbody></table>
<p>获取当前鼠标位置ev.xxx：（原点位置不同）</p>
<table>
<thead>
<tr>
<th align="center"><strong>clientX</strong></th>
<th align="center"><strong>clientY</strong></th>
<th align="center"><strong>原点位置：可视窗口的左上角为原点</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center"><strong>pageX</strong></td>
<td align="center"><strong>pageY</strong></td>
<td align="center"><strong>原点位置：整个页面左上角(包含滚出去的滚动距离)</strong></td>
</tr>
<tr>
<td align="center"><strong>screenX</strong></td>
<td align="center"><strong>screenY</strong></td>
<td align="center"><strong>原点位置：电脑屏幕左上角为原点</strong></td>
</tr>
</tbody></table>
</li>
<li><p>键盘事件</p>
<p>属性：</p>
<p>shiftKey  按下shift键，为true，默认为false</p>
<p>altKey   </p>
<p>ctrlKey   </p>
<p>metaKey   windows系统   按下window键，为true</p>
<p>​                   macos系统    按下command键，为true</p>
<p>​        【注】和别的操作进行组合，形成一些快捷键操作</p>
<p>//which在IE8及以下不支持</p>
<p>​      <code>keyCode</code> 键码</p>
<p>​      <code>which</code></p>
<p>​      返回值：键码返回的是大写字母的ASCII值，不区分大小写，支持全键盘</p>
<p>​      格式：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> which = e.which || e.keyCode;</span><br></pre></td></tr></table></figure>

<p>​      【注】只在keydown下支持</p>
<p>​      <code>charCode</code> 字符码</p>
<p>​      <code>which</code></p>
<p>​      格式：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> which = e.which || e.charCode;</span><br></pre></td></tr></table></figure>

<p>​      【注】只在keypress(字符键0-9及26个字母)下支持,只支持字符</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>冒泡排序和选择排序法</title>
    <url>/2020/07/20/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E5%92%8C%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E6%B3%95/</url>
    <content><![CDATA[<h1 id="冒泡排序和选择排序法"><a href="#冒泡排序和选择排序法" class="headerlink" title="冒泡排序和选择排序法"></a>冒泡排序和选择排序法</h1><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = arr.length;i &gt;= <span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>;j &lt; i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &gt; arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">var</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp; </span><br><span class="line">        	&#125;</span><br><span class="line">    	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">chooseSort</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = arr.length<span class="number">-1</span>;i &gt;= <span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = i;j &gt;= <span class="number">0</span>;j--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j]&gt;arr[i])&#123;</span><br><span class="line">                <span class="keyword">var</span> temp = arr[j];</span><br><span class="line">                arr[j] = arr[i];</span><br><span class="line">                arr[i] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>事件练习</title>
    <url>/2020/07/20/%E4%BA%8B%E4%BB%B6%E7%BB%83%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="事件练习"><a href="#事件练习" class="headerlink" title="事件练习"></a>事件练习</h1><p><strong>随鼠标移动的小方块</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>事件练习1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line">            margin: 0;padding: 0;</span><br><span class="line">        </span><br><span class="line">        &#125;</span><br><span class="line">        /* body&#123;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125; */</span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 208<span class="selector-tag">px</span>;<span class="selector-tag">height</span>: 208<span class="selector-tag">px</span>;<span class="selector-tag">background-color</span>: <span class="selector-tag">cyan</span>; <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;<span class="comment">/*background: url("Lucky.jpg") no-repeat;*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//使鼠标位于小方块大概中心的位置</span></span></span><br><span class="line"><span class="actionscript">                oDiv.style.left = e.clientX - <span class="number">104</span> + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                oDiv.style.top = e.clientY - <span class="number">104</span> + <span class="string">"px"</span>;</span></span><br><span class="line">            &#125;               </span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>鼠标移动的小尾巴</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>事件练习2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line">            margin: 0;padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-tag">div</span>&#123;<span class="attribute">position</span>: absolute;<span class="attribute">width</span>: <span class="number">20px</span>;<span class="attribute">height</span>: <span class="number">20px</span>;<span class="attribute">background-color</span>: cyan;<span class="attribute">border-radius</span>: <span class="number">10px</span>;<span class="attribute">position</span>: absolute;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> arr = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">ev</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//让下标为0的div跟随鼠标移动</span></span></span><br><span class="line"><span class="actionscript">                arr[<span class="number">0</span>].style.left = e.clientX + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                arr[<span class="number">0</span>].style.top = e.clientY + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//错落有致，前后相随，后一个落在前一个先前的位置，前一个再落到前前一个之前的位置...依次落</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span>(<span class="keyword">var</span> i = arr.length <span class="number">-1</span>; i &gt; [<span class="number">0</span>];i--)&#123;</span></span><br><span class="line"><span class="actionscript">                    arr[i].style.left = arr[i - <span class="number">1</span>].offsetLeft + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                    arr[i].style.top = arr[i - <span class="number">1</span>].offsetTop + <span class="string">"px"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;     </span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>关系运算符</title>
    <url>/2020/07/20/%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><p>赋值运算符：=</p>
<p>​    关系运算符：</p>
<p>​      &lt; &gt; &lt;= &gt;= == != === !==</p>
<p>​      [注]值，绝对是布尔值</p>
<p>​      自动数据类型转换</p>
<p>​        一.和其他运算符一样，当前关系运算符操作非数值时要遵循一下规则：</p>
<p>​          1）两个操作数都是数值，则数值比较</p>
<p>​          2）两数都是字符串，按ASIIC码逐位比较</p>
<p>​          3）两个操作数有一个是数值，则将另一个转换为数值在，再进行数值比较    ## 对于纯数字的字符串适用此规则，对于随意字符串则无法比较</p>
<p>​        二.在相等和不等的比较上，如果操作数是非数值，则遵循一下规则</p>
<p>​          1）一个是布尔值转换为 0或1</p>
<p>​          2）一个是字符串，转换为数值再比较</p>
<p>​          3）一个操作数是NaN，则==返回false,!=返回true 且NaN和NaN不等</p>
<p>​          4）=== 数据类型和数值都相同返回true</p>
<p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(<span class="literal">NaN</span>!=<span class="literal">NaN</span>);<span class="comment">//true</span></span><br><span class="line">alert(<span class="built_in">Number</span>(<span class="literal">undefined</span>));<span class="comment">//NaN</span></span><br><span class="line">alert(<span class="built_in">Number</span>(<span class="literal">null</span>));<span class="comment">//0</span></span><br><span class="line">alert(<span class="literal">null</span>==<span class="literal">undefined</span>);<span class="comment">//true:0 == 0</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>在官网下载nodejs和git速度很慢的解决方法</title>
    <url>/2020/07/18/%E5%9C%A8%E5%AE%98%E7%BD%91%E4%B8%8B%E8%BD%BDnodejs%E5%92%8Cgit%E9%80%9F%E5%BA%A6%E5%BE%88%E6%85%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="在官网下载nodejs和git速度很慢的解决方法"><a href="#在官网下载nodejs和git速度很慢的解决方法" class="headerlink" title="在官网下载nodejs和git速度很慢的解决方法"></a>在官网下载nodejs和git速度很慢的解决方法</h1><ul>
<li><p>node.js</p>
<p>在官网速度慢到崩溃</p>
<p><strong>后来在这里下载几秒钟结束战斗：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></strong></p>
</li>
<li><p>git</p>
<p>下载git是需要外网的，没有外网就会很慢，但是我们这种老实人不会做违法犯罪的事，我们就用内网下载，下载链接：<a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/git-for-windows/</a></p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>声明提升</title>
    <url>/2020/07/20/%E5%A3%B0%E6%98%8E%E6%8F%90%E5%8D%87/</url>
    <content><![CDATA[<h1 id="声明提升"><a href="#声明提升" class="headerlink" title="声明提升"></a>声明提升</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">      内存分配，一次分配</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      准备做菜，先要将菜谱从头到尾看一遍，所有准备材料准备好，才开始做菜。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">      预编译：在所有代码运行之前，计算机将代码从头到尾看一遍。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          将这个程序需要的空间一次性分配好（me：在程序运行前变量就声明好了）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">      声明提升：在当前作用域，声明变量、函数，会直接提升在整个代码的最前面运行。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(num);</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;<span class="comment">//变量声明提升</span></span><br><span class="line">alert(num);</span><br><span class="line"></span><br><span class="line">show();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"Hello world!"</span>);</span><br><span class="line">&#125;<span class="comment">//函数声明提升</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    i = <span class="number">1</span>;<span class="comment">//不建议这样写,破坏代码书写和使用的规范</span></span><br><span class="line">    alert(i);</span><br><span class="line">&#125;</span><br><span class="line">demo();</span><br><span class="line">alert(i);</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>多分支语句</title>
    <url>/2020/07/20/%E5%A4%9A%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<h1 id="多分支语句"><a href="#多分支语句" class="headerlink" title="多分支语句"></a>多分支语句</h1><p>例子：</p>
<p>if…else相关</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(x &gt; <span class="number">85</span>)&#123;</span><br><span class="line">    alert(<span class="string">"优秀！"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(x &lt;= <span class="number">85</span> &amp;&amp; x &gt; <span class="number">75</span>)&#123;</span><br><span class="line">    alert(<span class="string">"良好！"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(x &lt;= <span class="number">75</span> &amp;&amp; x &gt; <span class="number">60</span>)&#123;</span><br><span class="line">    alert(<span class="string">"及格！"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="string">"不及格！"</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>switch语句</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> 常量<span class="number">1</span>:</span><br><span class="line">            语句<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            语句;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>变量的命名和弱引用</title>
    <url>/2020/07/20/%E5%8F%98%E9%87%8F%E7%9A%84%E5%91%BD%E5%90%8D%E5%92%8C%E5%BC%B1%E5%BC%95%E7%94%A8/</url>
    <content><![CDATA[<h1 id="变量的命名和弱引用"><a href="#变量的命名和弱引用" class="headerlink" title="变量的命名和弱引用"></a>变量的命名和弱引用</h1><p> 标识符：所有用户自定义的名字叫做标识符</p>
<p>​    变量名也是标识符</p>
<p>​    命名规则：</p>
<p>​      1.只能有数字，字母，下滑线和美元符号($)组成</p>
<p>​      2.不能以数字开头</p>
<p>​      3.不能用保留字和关键字</p>
<p>​      4.大小写敏感，如 a 和 A 随机两个不同的变量</p>
<p>​      5.推荐见名思意（尽量使用英文全称）</p>
<p>​      6.单词个数超过两个</p>
<p>​        &lt;1&gt;驼峰式命名</p>
<p>​          className</p>
<p>​        &lt;2&gt;下划线命名</p>
<p>​          class_naem</p>
<p>变量：弱引用类型，赋值成什么数据类型就是什么数据类型</p>
<p>​      【注】不建议改变变量的数据类型。便于阅读代码</p>
<p>​    关键字：</p>
<p>​      typeof</p>
<p>​      格式： typeof 常量/变量</p>
<p>​      功能： 返回当前常量或变量的数据类型(返回的是字符串类型)；</p>
<p>e.g.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(<span class="keyword">typeof</span> <span class="keyword">typeof</span> <span class="literal">undefined</span>);</span><br></pre></td></tr></table></figure>

<p>结果：（警告框弹出）</p>
<p>​        string</p>
]]></content>
  </entry>
  <entry>
    <title>属性节点</title>
    <url>/2020/07/20/%E5%B1%9E%E6%80%A7%E8%8A%82%E7%82%B9/</url>
    <content><![CDATA[<h1 id="属性节点"><a href="#属性节点" class="headerlink" title="属性节点"></a>属性节点</h1><p>直接上例子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>attribute和元素属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            setAttribute</span><br><span class="line">            getAttribute</span><br><span class="line">            removeAttribute()</span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.id);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.title);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.getAttribute("id"));</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.getAttribute("title"));</span></span></span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="comment">// /*</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     1.class的访问</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// */</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// /*区别1*/</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.className);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.getAttribute("class"));</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// /*区别2*/</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.xxx);//自定义属性访问不到undefined</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.getAttribute("xxx"));</span></span></span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="comment">// oDiv.className = "000";</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oDiv.zzz = "zzz";</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oDiv.setAttribute("zzz","zzz");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert(oDiv.getAttribute("zzz"));</span></span></span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="comment">//两种移除方式有区别</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oDiv.title = "";</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//oDiv.removeAttribute("title");</span></span></span><br><span class="line"></span><br><span class="line">        /*</span><br><span class="line">            innerHTML     获取标签间内容</span><br><span class="line">            innerText     获取纯文本，不会解析标签设置纯文本</span><br><span class="line">            outerHTML     从外标签开始到外标签结束</span><br><span class="line">        */</span><br><span class="line">        alert(oDiv.innerHTML);</span><br><span class="line"><span class="handlebars"><span class="xml">        // oDiv.innerHTML = "<span class="tag">&lt;<span class="name">strong</span>&gt;</span>HELP<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>"</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// oDiv.innerText = ""</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        oDiv.innerText = "<span class="tag">&lt;<span class="name">strong</span>&gt;</span>HELP<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>";</span></span></span><br><span class="line">        alert(oDiv.outerHTML);</span><br><span class="line"><span class="handlebars"><span class="xml">        oDiv.outerHTML = "<span class="tag">&lt;<span class="name">strong</span>&gt;</span>123<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>";</span></span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">title</span>=<span class="string">"hellow"</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">xxx</span>=<span class="string">"自定义属性"</span>&gt;</span>div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>attributes</code> 获取当前元素节点上的属性节点;//集合</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>属性节点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line"><span class="actionscript">            attributes 获取当前元素节点上的属性节点;<span class="comment">//集合</span></span></span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> oDiv = sdocument.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//getNamedItem() 方法可返回指定的节点。</span></span></span><br><span class="line"><span class="actionscript">            alert(oDiv.attributes.getNamedItem(<span class="string">"id"</span>).nodeType);</span></span><br><span class="line"><span class="actionscript">            alert(oDiv.attributes[<span class="string">"id"</span>].nodeType);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>函数</title>
    <url>/2020/07/20/%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>函数的语法：</p>
<p>​      函数声明</p>
<pre><code><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params">形参<span class="number">1</span>，形参<span class="number">2</span>，...</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="comment">//函数体（具体要执行的代码）;</span></span><br><span class="line">     <span class="keyword">return</span> 表达式;<span class="comment">//不写return 返回undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><p>​        【注】函数执行到return就停止了  </p>
<p>​      作用：</p>
<p>​        使程序简明易读</p>
<p>​        有利于程序维护</p>
<p>​        提高开发效率</p>
<p>​        增强代码的重用性</p>
<p>​      </p>
<p>​      每个函数内部都有一个arguments对象,系统内置的。</p>
<p>​      arguments是用来存储实际传入的参数</p>
<p>​        属性：</p>
<p>​          <code>arguments.length</code> 返回当前存储的参数个数</p>
<p>​        访问数据：</p>
<p>​          arguments[下标]; 【注】下标从零开始</p>
<p>​      任何程序在执行的时候都要占用内存空间，函数调用的时候也要去占用内存</p>
<p>​      垃圾回收机制：调用函数的时候，系统会分配对应的空间给这个函数使用，当函数使用完毕以后，这个内存空间要释放，还给系统  </p>
<p>​        </p>
<p>​        在函数内部版声明的变量和形参是属于当前函数的内存空间的</p>
<p>​    【注】有局部变量和全局变量之分</p>
<p>​        内存管理机制：在函数中声明的变量和形参，会随着函数的调用被创建，随函数调用的结束而被销毁</p>
<p>​            在函数中声明的变量和形参，有效范围是当前函数（当前函数的大括号），作用域，局部作用域</p>
<p>​        就近原则：变量离哪个作用域近就使用哪个作用域内的同名变量</p>
]]></content>
  </entry>
  <entry>
    <title>localtion对象</title>
    <url>/2020/07/20/localtion%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h1 id="localtion对象"><a href="#localtion对象" class="headerlink" title="localtion对象"></a>localtion对象</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>location对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            url：统一资源定位符</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//file:本地磁盘访问协议</span></span></span><br><span class="line">            协议：</span><br><span class="line">                IP（域名）端口号 路径 查询字符串#错点</span><br><span class="line">                https协议 带的证书才能上岗 http是不安全的</span><br><span class="line">            location.hostname 主机名 IP（在全球范围内找到你当前所在网络的地址）</span><br><span class="line">                        |域名 就是 IP的别称</span><br><span class="line">            location.port       端口号（默认是隐藏的）</span><br><span class="line">            【注】当前电脑中使用网络的软件，随机给它分配一个端口号 0~655355 </span><br><span class="line">            hostname:port 可以直接定位到当前使用网络的程序。</span><br><span class="line">            小细节：浏览器的默认端口号8080</span><br><span class="line">                        https 443</span><br><span class="line">                        http 80</span><br><span class="line">            location.pathname 路径</span><br><span class="line"></span><br><span class="line">            location.search 查询字符串（前后端交互）</span><br><span class="line">                ？name1=value1&amp;name2=value2</span><br><span class="line">            </span><br><span class="line">            location.hash 锚点</span><br><span class="line"></span><br><span class="line">            location.href 完整地址栏</span><br><span class="line">        */</span><br><span class="line">        /*</span><br><span class="line">            location.assign(url);</span><br><span class="line">            【注】在当前窗口跳转到这个url</span><br><span class="line">            location.replace(url)</span><br><span class="line">            【注】在当前窗口替换成新的url</span><br><span class="line">            location.reload()</span><br><span class="line">            【注】刷新当前窗口</span><br><span class="line"><span class="actionscript">            location.reload(<span class="literal">true</span>)</span></span><br><span class="line">            【注】不经过浏览器缓存强制从服务器重载</span><br><span class="line">        */</span><br><span class="line">        alert(location);</span><br><span class="line"><span class="actionscript">        <span class="comment">// alert(location.hash);</span></span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"location.assign('https://www.baidu.com')"</span> &gt;</span>assign<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"location.replace('https://www.baidu.com')"</span> &gt;</span>repalce<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"location.reload(true)"</span> &gt;</span>reload<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>强制数据类型转换</title>
    <url>/2020/07/20/%E5%BC%BA%E5%88%B6%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="强制数据类型转换"><a href="#强制数据类型转换" class="headerlink" title="强制数据类型转换"></a>强制数据类型转换</h1><p> 强制数据类型转换</p>
<p>​      Boolean()</p>
<p>​      非空即真，非零即真</p>
<p>parseInt()</p>
<p>​      1.取整</p>
<p>​      2.将其它进制转换为十进制parseInt(number,进制)</p>
<p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(<span class="built_in">Boolean</span>(<span class="literal">null</span>));<span class="comment">//false</span></span><br><span class="line">alert(<span class="built_in">Boolean</span>(<span class="literal">undefined</span>));<span class="comment">//false</span></span><br><span class="line">alert(<span class="built_in">Boolean</span>(<span class="literal">NaN</span>));<span class="comment">//false</span></span><br><span class="line">alert(<span class="built_in">Boolean</span>(<span class="number">0</span>));<span class="comment">//false</span></span><br><span class="line">alert(<span class="built_in">Boolean</span>(-<span class="literal">Infinity</span>));<span class="comment">//true</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>字符串</title>
    <url>/2020/07/20/%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><h2 id="字符串的声明"><a href="#字符串的声明" class="headerlink" title="字符串的声明"></a>字符串的声明</h2><ol>
<li><p>通过new运算符去声明字符串</p>
</li>
<li><p>省略new声明字符串</p>
</li>
<li><p>字符串常量赋值</p>
<p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">"Dopphu"</span>);</span><br><span class="line"><span class="keyword">var</span> str2 = <span class="built_in">String</span>(<span class="string">"Dopphu"</span>);</span><br><span class="line"><span class="keyword">var</span> str3 = <span class="string">"Dopphu"</span>;</span><br></pre></td></tr></table></figure>



</li>
</ol>
<h2 id="访问字符串中的字符"><a href="#访问字符串中的字符" class="headerlink" title="访问字符串中的字符"></a>访问字符串中的字符</h2><p>​    访问字符串中的字符：</p>
<p>​        <code>字符串.length</code> 访问字符串的个数。</p>
<p>​        【注】中文<code>utf-8</code>（三个字符表示一个汉字） <code>gbk</code>（两个字符表示一个汉字） 在计数时都是当做一个字符计算。</p>
<p>​      访问字符串中单个字符：</p>
<p>​        <code>字符串.charAt(下标)</code> 【注】从0开始</p>
<p>​        字符串[下标]</p>
<p>​      【注】字符串是只读的。</p>
<h2 id="字符串查找的方法"><a href="#字符串查找的方法" class="headerlink" title="字符串查找的方法"></a>字符串查找的方法</h2><p><code>charCodeAt()</code></p>
<p>​        格式：<code>字符串.charCodeAt(下标)</code></p>
<p>​        功能：访问字符串中对应下标的ASCII码值。</p>
<p><code>String.fromCharCode()</code></p>
<p>​        格式：<code>String.fromCharCode()</code></p>
<p>​        功能：将传入的ASCII码值转成对应的字符，返回这个对应的字符串。</p>
<p><code>indexOf()</code></p>
<p>​        格式：<code>supStr.indexOf(subStr,start);</code></p>
<p>​        参数：第一个参数，查找的字符串</p>
<p>​                   <code>start</code> 从哪个下标开始查,不传入则从零开始找</p>
<p>​        功能：在<code>supStr</code>中查找<code>subStr</code>第一次出现的位置，从<code>start</code>开始查找</p>
<p><code>lastIndexOf()</code></p>
<p>​        格式：<code>字符串.lastIndexof()</code></p>
<p>​        参数：字符串</p>
<p>​        只有一个参数，查找最后一次出现的位置</p>
<p><code>search()</code></p>
<p>​        参数：字符串/正则表达式</p>
<p>​        只能查找第一次出现的位置，不能指定范围</p>
<h2 id="一点点正则"><a href="#一点点正则" class="headerlink" title="一点点正则"></a>一点点正则</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//i忽略大小写，g全局匹配</span></span><br><span class="line"><span class="keyword">var</span> demo1 = <span class="regexp">/Abc/i</span>;</span><br><span class="line"><span class="keyword">var</span> demo2 = <span class="regexp">/abc/g</span>;</span><br></pre></td></tr></table></figure>





<h2 id="字符串的方法"><a href="#字符串的方法" class="headerlink" title="字符串的方法"></a>字符串的方法</h2><p><code>substring</code></p>
<p>​        格式：<code>字符串.substring(start, end)</code></p>
<p>​        功能：将字符串中（start，end）部分提取，生成一个新字符串</p>
<p>​        返回值：生成的新字符串。</p>
<p><code>substr</code></p>
<p>​        格式：<code>字符串.substr(start, length)</code> //length为要提取的长度</p>
<p>​        返回值：返回新字符串。    </p>
<p><code>slice()</code>//数组的方法，字符串也可以调用</p>
<p>​        格式：<code>字符串.slice(start, end)</code></p>
<p>​        返回值：返回新字符串</p>
<p><code>split()</code>   字符串分割</p>
<p>​        格式：字符串.split(分隔符, length)</p>
<p>​        参数：</p>
<p>​          第一个参数，用这个分割符进行分割</p>
<p>​          第二个参数，控制返回数组的元素格式（返回数组中元素的个数），一般情况下不用</p>
<p>​        功能：用分割符对原字符串分割，进行字符串分割，将分割完的子串放在数组中返回。</p>
<p>​        返回值：数组</p>
<p>​        【注意】</p>
<p>​          1.相邻的两个分割符，会产生空字符串</p>
<p>​          2.用空字符串分割则将每个字符单独分割成子串，放在数组中。</p>
<p>转换大小写(产生新字符串，原字符串不变)</p>
<p>​        <code>toLowerCase()</code></p>
<p>​        <code>toUpperCase()</code></p>
<p><code>contact</code>进行字符串拼接</p>
<p>​        格式：<code>字符串.concat(str1[,str2...])</code></p>
<p>​        参数：字符串</p>
<p>​        功能：参数字符串会顺序接在原字符串后，生成新字符串原字符串不改变</p>
<p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> demo = <span class="string">"Dppphu"</span></span><br><span class="line">alert(demo.concat(<span class="string">"asd"</span>,<span class="string">"asd"</span>));<span class="comment">//警告框输出		Dopphuasdasd</span></span><br><span class="line">alert(demo);<span class="comment">//警告框输出		Dopphu</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>文档碎片实例</title>
    <url>/2020/07/20/%E6%96%87%E6%A1%A3%E7%A2%8E%E7%89%87%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="文档碎片实例"><a href="#文档碎片实例" class="headerlink" title="文档碎片实例"></a>文档碎片实例</h1><p>文档碎片操作效率更高</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文档碎片<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            创建10w个节点，添加到页面上</span><br><span class="line">        */</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.time(<span class="string">"test1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.body.appendChild(newDiv);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.timeEnd(<span class="string">"test1"</span>);<span class="comment">//test1: 76.470703125ms</span></span></span><br><span class="line">            /*</span><br><span class="line">                先创建好10w个节点，将10w节点插入到一个节点上，最后将这一个节点添加到页面上。</span><br><span class="line">            */</span><br><span class="line"><span class="actionscript">            <span class="comment">//文档碎片操作</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.time(<span class="string">"test2"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> node = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;<span class="number">10000</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span></span><br><span class="line">                node.append(newDiv);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.body.appendChild(node);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.timeEnd(<span class="string">"test2"</span>);<span class="comment">//test2: 30.001220703125ms</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--empty--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>常量和变量</title>
    <url>/2020/07/20/%E5%B8%B8%E9%87%8F%E5%92%8C%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<h1 id="常量和变量"><a href="#常量和变量" class="headerlink" title="常量和变量"></a>常量和变量</h1><h2 id="常量：值不可以改变的叫常量"><a href="#常量：值不可以改变的叫常量" class="headerlink" title="常量：值不可以改变的叫常量"></a>常量：值不可以改变的叫常量</h2><p>​      数据类型：</p>
<p>​        基本数据类型：</p>
<p>​          数字</p>
<p>​            类型：number</p>
<p>​            例子：100，-20，3.14</p>
<p>​          布尔值</p>
<p>​            类型：boolean</p>
<p>​            例子：true false</p>
<p>​          字符串</p>
<p>​            类型：成对单引号或双引号</p>
<p>​        复合/引用数据类型</p>
<p>​        特殊数据类型</p>
<p>​          null  空</p>
<p>​          undefined  </p>
<p>​          NaN（not a number）</p>
<p>​    </p>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>​      变量：值可以被修改的叫变量</p>
<p>​      </p>
<p>​    程序被CPU执行</p>
<p>​      【注】程序被磁盘读取在内存中，被CPU运行</p>
<p>​      了解计算机组成</p>
<p>​        磁盘  内存  CPU/GPU</p>
<p>​      关键信息：内存有空间，程序本质上运行是在内存中运动的。</p>
<p>​      【注】编程就是合理地分配内存</p>
<p>​      1.声明变量（必须声明以后才能使用）</p>
<p>​        关键字（系统征用的有特殊功能的单词）</p>
<p>​      2.初始化：声明变量的时候，直接给变量赋值叫初始化</p>
<p>​      3.如果我们声明变量的时候，没有值给这个变量，系统就默认成undefined</p>
<p>​    </p>
<p>​    </p>
]]></content>
  </entry>
  <entry>
    <title>添加删除节点操作</title>
    <url>/2020/07/20/%E6%B7%BB%E5%8A%A0%E5%88%A0%E9%99%A4%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="添加删除节点操作"><a href="#添加删除节点操作" class="headerlink" title="添加删除节点操作"></a>添加删除节点操作</h1><p>直接丢一个例子叭</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>节点操作案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line">            width: 400px;height: 100px;background-color: burlywood;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div2</span>&#123;</span></span><br><span class="line">            width: 400px;height: 500px;background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div2</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line">            border: 1px dotted purple;padding: 2px;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#div2</span> <span class="selector-tag">div</span> <span class="selector-tag">button</span>&#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            right: 0;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv1 = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv2 = <span class="built_in">document</span>.getElementById(<span class="string">"div2"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oInput = <span class="built_in">document</span>.getElementById(<span class="string">"input1"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//获取div1下的面所有的button</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> aBtns = oDiv1.getElementsByTagName(<span class="string">"button"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//分别给三个按钮添加不同的点击函数</span></span></span><br><span class="line"><span class="actionscript">            aBtns[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">                if(!oInput.value)&#123;</span><br><span class="line"><span class="actionscript">                    alert(<span class="string">"输入内容不能为空！"</span>);</span></span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//获取输入框中的内容，创建节点添加到页面上</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> oTxt = <span class="built_in">document</span>.createTextNode(oInput.value);</span></span><br><span class="line">                    newDiv.appendChild(oTxt);</span><br><span class="line">                    oDiv2.appendChild(newDiv);</span><br><span class="line"><span class="actionscript">                    oInput.value = <span class="string">""</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            aBtns[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//删除最后一个节点</span></span></span><br><span class="line">                oDiv2.removeChild(oDiv2.lastChild);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            aBtns[<span class="number">2</span>].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> newNode = oDiv2.lastChild.cloneNode(<span class="literal">true</span>);</span></span><br><span class="line">                oDiv2.appendChild(newNode);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"input1"</span> <span class="attr">placeholder</span>=<span class="string">"输入内容"</span>/&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"add"</span>&gt;</span>增加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"delete"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"copy"</span>&gt;</span>拷贝<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--仅用来显示，无实际意义--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>xxx<span class="tag">&lt;<span class="name">button</span>&gt;</span>x<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>xxx<span class="tag">&lt;<span class="name">button</span>&gt;</span>x<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>xxx<span class="tag">&lt;<span class="name">button</span>&gt;</span>x<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>自己实现getElementsByClassName</title>
    <url>/2020/07/20/%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0getElementsByClassName/</url>
    <content><![CDATA[<h1 id="自己实现getElementsByClassName"><a href="#自己实现getElementsByClassName" class="headerlink" title="自己实现getElementsByClassName"></a>自己实现getElementsByClassName</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义byClassName<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            node.getElementsByClassName()</span><br><span class="line">            这样IE8以下也可以用className来查找元素了</span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">elementsByClassName</span><span class="params">(node, classStr)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//1.获取node这个节点下所有节点</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> nodes = node.getElementsByTagName(<span class="string">"*"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> arr = [];<span class="comment">//存放符合条件的节点。</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; nodes.length; i++)&#123;</span></span><br><span class="line">                if(nodes[i].className === classStr)&#123;</span><br><span class="line">                    arr.push(nodes[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> arr;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oL = <span class="built_in">document</span>.getElementById(<span class="string">"uli"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> nodes = elementsByClassName(oL,<span class="string">"box"</span>);</span></span><br><span class="line">            alert(nodes.length);</span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; nodes.length; i++)&#123;</span></span><br><span class="line"><span class="actionscript">                nodes[i].style.backgroundColor = <span class="string">"red"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"uli"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">name</span>=<span class="string">"hello"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"hello"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">name</span>=<span class="string">"hello"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">id</span>=<span class="string">"oli"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>将hexo博客部署到GitHub上</title>
    <url>/2020/07/18/%E5%B0%86hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A/</url>
    <content><![CDATA[<h1 id="将hexo博客部署到GitHub上"><a href="#将hexo博客部署到GitHub上" class="headerlink" title="将hexo博客部署到GitHub上"></a>将hexo博客部署到GitHub上</h1><p><strong>准备工作</strong>：安装git，nodejs（因为外网被墙下载慢的问题百度解决），注册GitHub账号</p>
<ul>
<li>首先使用nodejs的npm命令全局安装hexo</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>然后可以使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure>

<p>查看hexo是否安装成功，安装成功之后新建一个文件夹（例如：mkdir BLOG）用来存放相关文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>

<p>执行该命令，初始化博客</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<p>部署在本地，通过localhost:4000访问</p>
<ul>
<li>接下来往GitHub部署</li>
</ul>
<p>创建一个仓库</p>
<p>注：仓库名为 <strong>昵称.github.io</strong></p>
<p>然后安装一个git插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>设置<code>_config.yml</code>文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在#Deployment的deploy进行编辑</span><br><span class="line">deploy:</span><br><span class="line">	type: git</span><br><span class="line">	repo: https:&#x2F;&#x2F;github.com&#x2F;Dopphu&#x2F;Dopphu.github.io.git -&gt;刚刚新建的仓库地址</span><br><span class="line">	branch: master</span><br></pre></td></tr></table></figure>

<p>注意：type和repo等的冒号后面是有一个空格的</p>
<p>接下来就简单了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<p>将博客推到远端的GitHub仓库</p>
<p>补充：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>

<p>↑ 生成静态页面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>

<p>↑清除静态页面</p>
<p>这两个结合<code>hexo d</code>和<code>hexo s</code>就基本实现了博客的更新啦</p>
]]></content>
  </entry>
  <entry>
    <title>节点操作</title>
    <url>/2020/07/20/%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h1><p><code>document.write()</code></p>
<p>​        【注】会覆盖页面上原有的内容(挤走)</p>
<p><code>createElement()</code></p>
<p>​        格式：<code>document.createElement()</code></p>
<p>​        参数：标签名</p>
<p>​        返回值：创建好的节点</p>
<p><code>appendChild()</code></p>
<p>​        格式：<code>node1.appendChild()</code></p>
<p>​        功能：创建文本节点（纯文本）</p>
<p><code>createTextNode()</code></p>
<p>​        格式：<code>document.createTextNode(文本);</code></p>
<p>​        功能：创建文本节点（纯文本）//不解析标签</p>
<p><code>insertBefore()</code></p>
<p>​        格式：<code>box1.parentNode.insertBefore(box2, box1);</code></p>
<p>​        功能：将box2添加到box1前面</p>
<p>e.g.</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.body.insertBefore(box2, box1);</span><br></pre></td></tr></table></figure>

<p><code>replaceChild()</code></p>
<p>​        格式：<code>box1.parentNode.replaceChild(box2, box1)</code></p>
<p>​        功能：用box2替换box1</p>
<p><code>cloneNode()</code></p>
<p>​        格式1：<code>node.cloneNode()</code></p>
<p>​        格式2：<code>node.clone(true)</code>//克隆节点本身及其子节点</p>
<p>​        功能：返回新克隆的节点</p>
<p><code>removeChild()</code></p>
<p>​        格式：<code>box.parentNode.removeChild(box);</code></p>
<p>​        功能：将box节点从页面上移除</p>
]]></content>
  </entry>
  <entry>
    <title>获取子节点</title>
    <url>/2020/07/20/%E8%8E%B7%E5%8F%96%E5%AD%90%E8%8A%82%E7%82%B9/</url>
    <content><![CDATA[<h1 id="获取子节点"><a href="#获取子节点" class="headerlink" title="获取子节点"></a>获取子节点</h1><p><code>childNodes</code> //访问当前节点下所有的子节点</p>
<p><code>firstChild</code> //访问子节点中的首位</p>
<p><code>lastChild</code> //访问子节点中的最后一位</p>
<p><code>nextSibling</code>//返回指定节点之后紧跟的节点，在相同的树层级中。</p>
<p><code>previousSibling</code>//返回指定节点之前紧跟的节点，在相同的树层级中。</p>
<p>//下述这些方法只获取子节点中的元素节点 IE8以下不兼容</p>
<p><code>children</code>//访问当前节点下所有的子节点</p>
<p><code>firstElementChild</code> //访问子节点中的首位</p>
<p><code>lastElementChild</code>//访问子节点中的最后一位</p>
<p><code>nextElementSibling</code>//返回指定节点之后紧跟的节点，在相同的树层级中。</p>
<p><code>previousElementSibling</code>//返回指定节点之前紧跟的节点，在相同的树层级中。</p>
<table>
<thead>
<tr>
<th></th>
<th align="center">nodeType</th>
<th align="center">nodeName</th>
<th>nodeValue</th>
</tr>
</thead>
<tbody><tr>
<td>元素节点</td>
<td align="center">1</td>
<td align="center">标签名</td>
<td>null</td>
</tr>
<tr>
<td>属性节点</td>
<td align="center">2</td>
<td align="center">属性名</td>
<td>属性值</td>
</tr>
<tr>
<td>文本节点</td>
<td align="center">3</td>
<td align="center">#text</td>
<td>文本内容</td>
</tr>
</tbody></table>
<p>例子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>获取子节点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line">            alert(oDiv.childNodes.length);</span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; oDiv.childNodes.length;i++)&#123;</span></span><br><span class="line">                alert(oDiv.childNodes[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        </span><br><span class="line">            alert(oDiv.firstChild.nodeName);</span><br><span class="line">            alert(oDiv.lastChild.nodeName);</span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="comment">// 将空白的文本节点剔除（没有直接办法）</span></span></span><br><span class="line">            alert(oDiv.children.length);</span><br><span class="line">            alert(oDiv.firstElementChild.nodeName);</span><br><span class="line">            alert(oDiv.lastElementChild.nodeName);</span><br><span class="line">            </span><br><span class="line"><span class="actionscript">            <span class="comment">//文本节点的nodeName属性</span></span></span><br><span class="line">            alert(oDiv.firstElementChild.nextElementSibling.firstChild.nodeName)</span><br><span class="line">        &#125;         </span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">em</span>&gt;</span>em文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">        div文本</span><br><span class="line">        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>strong文本<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>数组</title>
    <url>/2020/07/20/%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><ol>
<li><p>数组的声明</p>
<p>​        1.通过new创建数组</p>
<p>​        2.省略new运算符创建数组</p>
<p>​        3.数组常量进行赋值（JS中一般使用中括号[]）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,...,n];</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>数组.length</code>返回数组中元素个数</p>
<p>​    访问数组元素：</p>
<p>​                数组[下标]  下标从0开始</p>
</li>
</ol>
<p>乱入…</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Math</span>.random(n,m);<span class="comment">//左闭右开，随机小数</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>for循环遍历数组</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="comment">//empty</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><p>数组是引用数据类型</p>
<p>​    数组，数组的变量存储的是数据的地址</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>];</span><br><span class="line">alert(arr);<span class="comment">//警告框：10,20,30,40</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>数组的方法</p>
<p>数组的方法：</p>
<p>​        栈结构：</p>
<p>​          栈：木盆</p>
<p>​          结构：从同一头进，从同一头出</p>
<p>​          特点：先进后出</p>
<p>​        数组的两个方法形成栈结构</p>
<p>​          <code>push</code></p>
<p>​            格式：<code>数组.push(参数1,参数2,...)</code></p>
<p>​            功能：给数组的末尾添加元素。</p>
<p>​            返回值：插完元素以后数组的长度。</p>
<p>​          <code>pop</code></p>
<p>​            格式：<code>数组.pop()</code></p>
<p>​            参数：没有参数。</p>
<p>​            返回值：取下的那一个元素。</p>
<p>​            功能：从数组末尾取下一个元素。</p>
<p>​        队列结构：</p>
<p>​          结构：从末尾进，从头部出</p>
<p>​          特点：先进先出</p>
</li>
</ol>
<p>   ​            <code>push</code></p>
<p>   ​            <code>shift()</code></p>
<p>   ​              格式：<code>数组.shift()</code></p>
<p>   ​              参数：没有参数。</p>
<p>   ​              功能：从数组的头部取下一个元素。</p>
<p>   ​              返回值：取下的元素。</p>
<p>   ​            </p>
<p>   ​            <code>unshift()</code></p>
<p>   ​              格式：<code>数组.unshift(参数1,参数2,...)</code></p>
<p>   ​              功能：从数组的头部插入元素。</p>
<p>   ​              返回值：插完元素以后数组的长度。</p>
<p>   ​              【注】就算传入的数据是数组，数组中的元素要单独挑出来再进行合并。</p>
<p>   ​        <code>concat()</code></p>
<p>   ​        1.拷贝原数组，生成新数组</p>
<p>   ​        2.合并数组</p>
<p>   ​          格式：<code>数组.contact(数据1,数据2,...)</code></p>
<p>   ​          返回值：合并产生的新数组，原数组不会改变。</p>
<p>   ​        <code>slice()</code></p>
<p>   ​          格式：数组.slice(start,end) 区间左闭右开</p>
<p>   ​          功能：可以基于当前数组获取指定区域的元素[start,end),提取出元素生成新数组。</p>
<p>   ​          返回值：生成的新数组，原数组不会发生任何改变。</p>
<p>   ​        </p>
<p>   ​        <code>splice()</code></p>
<p>   ​          格式：<code>数组.splice(start, length, 数据1, 数据2...)</code></p>
<p>   ​          参数：</p>
<p>   ​            start： 开始截取的位置</p>
<p>   ​            length： 截取元素的长度（原数组发生改变）</p>
<p>   ​            第三个及之后的参数： 在start位置，在原数组插入的元素</p>
<p>   ​          返回值：截取下来的元素组成的数组 </p>
<p>   ​          【注】在视觉上可以用来修改原数组的值</p>
<p>   ​        </p>
<p>   ​        <code>join()</code></p>
<p>   ​          格式：<code>数组.join(字符串)</code></p>
<p>   ​          功能：将数组中的元素，用传入的拼接符，拼接成一个字符串</p>
<p>   ​          返回值：拼接好的新字符串,原数组不变。</p>
<p>   ​    </p>
<p>   ​        <code>reverse()</code> </p>
<p>   ​          功能：将数组逆序，原数组改变</p>
<p>   ​          返回值：已经逆序的原数组</p>
<p>   ​        <code>sort()</code></p>
<p>   ​          从小到大排序，默认按字符串排序</p>
<p>   ​          参数：一个函数，代表你要怎样进行排序</p>
<p>   ​            例如：</p>
<pre><code>            <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">value1,value2</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value1 - value2;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//从小到大排序</span></span><br><span class="line"><span class="comment">//value1 和 value2换过来即为从大到小排序</span></span><br></pre></td></tr></table></figure>

数组是引用数据类型</code></pre><p>   ​    数组，数组的变量存储的是数据的地址</p>
<ol start="6">
<li>二维数组（非官方概念）</li>
</ol>
<p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="built_in">Array</span>(</span><br><span class="line">            [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],</span><br><span class="line">            [<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>],</span><br><span class="line">            <span class="number">100</span>,</span><br><span class="line">            [<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>],</span><br><span class="line">            [<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>]</span><br><span class="line">        );</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>ECMA6数组新特性待补充</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>跟随鼠标提示框移动案例</title>
    <url>/2020/07/20/%E8%B7%9F%E9%9A%8F%E9%BC%A0%E6%A0%87%E6%8F%90%E7%A4%BA%E6%A1%86%E7%A7%BB%E5%8A%A8%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="跟随鼠标提示框移动案例"><a href="#跟随鼠标提示框移动案例" class="headerlink" title="跟随鼠标提示框移动案例"></a>跟随鼠标提示框移动案例</h1><p>用到的事件类型：</p>
<p> 事件类型：</p>
<p>​        <code>mouseover</code>    让提示框显示</p>
<p>​        <code>mouseout</code>      让提示框隐藏</p>
<p>​        <code>mousemove</code>    让提示框跟随鼠标去移动</p>
<p>获取鼠标坐标：</p>
<p>​           clientX clientY  原点位置：可视窗口的左上角为原点</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>跟随鼠标提示框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        a&#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#msg</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 400<span class="selector-tag">px</span>;<span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;<span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(128, 128, 128, 0<span class="selector-class">.63</span>);<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;<span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;<span class="selector-tag">display</span>: <span class="selector-tag">none</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#container</span>&#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            事件类型：</span><br><span class="line">                mouseover</span><br><span class="line">                    让提示框显示</span><br><span class="line">                mouseout</span><br><span class="line">                    让提示框隐藏</span><br><span class="line">                mousemove</span><br><span class="line">                    让提示框跟随鼠标去移动</span><br><span class="line">                     clientX clientX    原点位置：可视窗口的左上角为原点</span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> arr = [<span class="string">"    李世民"</span>, <span class="string">"    鸡你太美"</span>, <span class="string">"    橘势已定"</span>];</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> aAs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"a"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oMsg = <span class="built_in">document</span>.getElementById(<span class="string">"msg"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; aAs.length; i++)&#123;</span></span><br><span class="line">                aAs[i].index = i;</span><br><span class="line"><span class="actionscript">                aAs[i].onmouseover = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// alert(this.index);</span></span></span><br><span class="line"><span class="actionscript">                    oMsg.innerHTML = arr[<span class="keyword">this</span>.index];</span></span><br><span class="line"><span class="actionscript">                    oMsg.style.display = <span class="string">"block"</span>;</span></span><br><span class="line">                &#125; </span><br><span class="line"><span class="actionscript">                aAs[i].onmouseout = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                    oMsg.style.display = <span class="string">"none"</span>;</span></span><br><span class="line">                &#125; </span><br><span class="line"><span class="actionscript">                <span class="comment">//添加鼠标移动事件</span></span></span><br><span class="line"><span class="actionscript">                aAs[i].onmousemove = <span class="function"><span class="keyword">function</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> e = ev || <span class="built_in">window</span>.event;</span></span><br><span class="line"><span class="actionscript">                    oMsg.style.left = e.clientX + <span class="number">10</span> + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">                    oMsg.style.top = e.clientY + <span class="number">10</span> + <span class="string">"px"</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>唐太宗<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>蔡徐坤<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Elsanna<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>认识事件对象和事件中的事件类型</title>
    <url>/2020/07/20/%E8%AE%A4%E8%AF%86%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1%E5%92%8C%E4%BA%8B%E4%BB%B6%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="认识事件对象和事件中的事件类型"><a href="#认识事件对象和事件中的事件类型" class="headerlink" title="认识事件对象和事件中的事件类型"></a>认识事件对象和事件中的事件类型</h1><p>太懒了直接把练习的HTML代码撂这儿</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>认识事件和事件中的事件类型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 200<span class="selector-tag">px</span>;<span class="selector-tag">height</span>: 200<span class="selector-tag">px</span>;<span class="selector-tag">color</span>: <span class="selector-tag">white</span>;<span class="selector-tag">background-color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.div2</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">width</span>: 300<span class="selector-tag">px</span>;<span class="selector-tag">height</span>: 300<span class="selector-tag">px</span>;<span class="selector-tag">background-color</span>: <span class="selector-tag">gray</span>;<span class="selector-tag">line-height</span>: 100<span class="selector-tag">px</span>;<span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;<span class="selector-tag">margin</span>: 20<span class="selector-tag">px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.div2</span> <span class="selector-tag">span</span>&#123;</span></span><br><span class="line">            width: 100px; height: 100px;background-color: white;display: inline-block;margin: 50px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line">            绑定事件</span><br><span class="line">                1.内联模式</span><br><span class="line">                2.外联模式/脚本模式(most)</span><br><span class="line"></span><br><span class="line">            绑定事件格式：</span><br><span class="line">                元素节点.on + 事件类型 = 匿名函数。</span><br><span class="line"></span><br><span class="line">                click 事件类型</span><br><span class="line">                onclick 事件处理的函数</span><br><span class="line"></span><br><span class="line">            事件类型的种类：</span><br><span class="line">                一.鼠标事件</span><br><span class="line">                    click       单击</span><br><span class="line">                    dblclick     双击</span><br><span class="line">                    mouseover   鼠标移入</span><br><span class="line">                    mouseout    鼠标移出</span><br><span class="line">                    mousemove   鼠标一动（会不停的触发）</span><br><span class="line">                    mousedown   鼠标按下</span><br><span class="line">                    mouseup     鼠标抬起</span><br><span class="line">                    mouseenter  鼠标移入</span><br><span class="line">                    mouseleave  鼠标移出</span><br><span class="line"></span><br><span class="line"><span class="javascript">                二.键盘事件（表单元素，全局<span class="built_in">window</span>）</span></span><br><span class="line">                    keydown     键盘按下（如果按下不放手，会一直触发）</span><br><span class="line">                    keyup       键盘抬起</span><br><span class="line"></span><br><span class="line">                    keypress    键盘按下（只支持字符键）</span><br><span class="line">                三.HTML事件</span><br><span class="line"><span class="javascript">                    <span class="number">1.</span><span class="built_in">window</span>事件</span></span><br><span class="line">                        load        当前页面加载完后会触发</span><br><span class="line">                        unload      当前页面解构的时候触发（刷新页面，关闭当前页面）  只有IE浏览器兼容</span><br><span class="line">                        scroll      页面滚动</span><br><span class="line">                        resize      窗口大小发生变化的时候触发</span><br><span class="line">                    2.表单事件  </span><br><span class="line">                        blur    失去焦点</span><br><span class="line">                        focus   获取焦点   </span><br><span class="line">                        select  当我们在输入框内选入文本时触发 </span><br><span class="line">                        change  当我们对输入框的文本进行修改并且失去焦点的时候</span><br><span class="line"></span><br><span class="line">                    【注】必须添加在form元素上</span><br><span class="line">                        submit  点击提交时触发</span><br><span class="line">                        reset   点击reset时触发</span><br><span class="line"></span><br><span class="line">        */</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">btnClick</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">"内联模式"</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oBtn.onclick = function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     alert("外联模式");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oBtn.ondblclick = function()&#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     alert("双击成功！");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">            oBtn.onmouseover = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.style.backgroundColor = <span class="string">"orange"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            oBtn.onmouseout = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.style.backgroundColor = <span class="string">"grey"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            /*</span><br><span class="line">                存在子节点重复触发</span><br><span class="line">                    mouseover</span><br><span class="line">                    mouseout</span><br><span class="line">                经过子节点不会重复触发,IE8以后才有。</span><br><span class="line">                    mouseenter</span><br><span class="line">                    mouseleave</span><br><span class="line">            */</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">"div1"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> i = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            oDiv.onmousemove = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">                i++;</span><br><span class="line">                oDiv.innerHTML = i;</span><br><span class="line">            </span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> aDivs = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"div2"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> j = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            aDivs[<span class="number">0</span>].onmouseout = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> oSpan = <span class="keyword">this</span>.getElementsByTagName(<span class="string">"span"</span>)[<span class="number">0</span>];</span></span><br><span class="line">                oSpan.innerHTML = j++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> k = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            aDivs[<span class="number">1</span>].onmouseover = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> oSpan = <span class="keyword">this</span>.getElementsByTagName(<span class="string">"span"</span>)[<span class="number">0</span>];</span></span><br><span class="line">                oSpan.innerHTML = k++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> i = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.onkeypress = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.title = i++;</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.onkeyup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.title = <span class="string">"抬起"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oInput = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"input"</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">            oInput.onfocus = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.time(<span class="string">"test1"</span>);</span></span><br><span class="line"><span class="actionscript">                oInput.value = <span class="string">"获取焦点"</span>;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.timeEnd(<span class="string">"test1"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            oInput.onblur = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.time(<span class="string">"test2"</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.value = <span class="string">"失去焦点"</span>;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.timeEnd(<span class="string">"test2"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            oInput.onselect = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"选中文本！"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            oInput.onchange = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"改变文本！"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oForm = <span class="built_in">document</span>.getElementById(<span class="string">"f1"</span>);</span></span><br><span class="line"><span class="actionscript">            oForm.onsubmit = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"submit!"</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            oForm.onreset = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"reset!"</span>);</span></span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"btnClick();"</span>&gt;</span>内联模式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>外联模式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>mouseover<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>mouseenter<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"f1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>算数运算符</title>
    <url>/2020/07/20/%E7%AE%97%E6%95%B0%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    <content><![CDATA[<h1 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h1><p>运算符：</p>
<p>​      1.算数运算符</p>
<p>​        + - * / %（取余）</p>
<p>​      2.关系运算符</p>
<p>​        &gt; &lt; &gt;= &lt;= == != ===(恒等) !==</p>
<p>​      3.逻辑运算符</p>
<p>​        || &amp;&amp; !</p>
<p>​      4.一元运算符</p>
<p>​        ++ –</p>
<p>​      5.赋值运算符</p>
<p>​        &lt;1&gt;基本赋值运算符</p>
<p>​        &lt;2&gt;复合赋值运算符 += -= … *=</p>
<p>表达式：任何数据和运算符组成的式子</p>
<p>自动数据类型转换：不同数据类型之间是没有办法进行运算，将数据转换为同一类型，再进行运算。</p>
<p>​      1.其中有一个操作数必须为字符串，运算符必须是+号，别的会会转换为字符串，再进行字符串拼接。</p>
<p>​      2.如果字符串中含有字符串以外的别的字符，转成NaN，NaN和任何数据类型运算都是NaN</p>
<p>​      3.除了字符串以外的数据，在进行算数运算的时候，先转成数字，在进行运算。</p>
<p>JS中除数可以为0，会得到</p>
<p>   infinity（无穷大）-infinity（无穷小）</p>
<p>例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">alert(<span class="string">"Hellwo"</span>+<span class="literal">true</span>);<span class="comment">//Hellwotrue</span></span><br><span class="line">alert(<span class="string">"Hellwo"</span>+<span class="number">100</span>);<span class="comment">//Hellwo100</span></span><br><span class="line">alert(<span class="string">"Hellwo"</span>+<span class="literal">undefined</span>);<span class="comment">//Hellwoundefined</span></span><br><span class="line">alert(<span class="string">"Hellwo"</span>+<span class="literal">NaN</span>);<span class="comment">//HellwoNaN</span></span><br><span class="line"></span><br><span class="line">alert(<span class="number">100</span>-<span class="string">"1a"</span>);<span class="comment">//NaN</span></span><br><span class="line"></span><br><span class="line">alert(<span class="number">100</span>-<span class="literal">null</span>);<span class="comment">//100</span></span><br><span class="line">alert(<span class="number">100</span>-<span class="literal">true</span>);<span class="comment">//99</span></span><br><span class="line">alert(<span class="number">100</span>-<span class="literal">undefined</span>);<span class="comment">//NaN</span></span><br><span class="line">alert(<span class="number">100</span>-<span class="literal">NaN</span>);<span class="comment">//NaN</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>获取元素节点</title>
    <url>/2020/07/20/%E8%8E%B7%E5%8F%96%E5%85%83%E7%B4%A0%E8%8A%82%E7%82%B9/</url>
    <content><![CDATA[<h1 id="获取元素节点"><a href="#获取元素节点" class="headerlink" title="获取元素节点"></a>获取元素节点</h1><p><code>document.getElementById(id)</code></p>
<p>在整个HTML页面获取节点（唯一id）</p>
<p><code>node.getElementsByTagName(标签名)</code></p>
<p>​        功能：通过标签名获取符合条件的节点元素</p>
<p>​        返回值：一个伪数组（非官方命名，和数组用起来类似）</p>
<p><code>node.getElementsByClassName(class名字);</code>     // IE8以下不兼容</p>
<p>​        功能：通过class名字属性获取符合条件的元素节点。</p>
<p><code>document.getElementByName(name属性值);</code></p>
<p>​        功能：通过name属性的值获取符合条件的元素节点。//只能全局查找</p>
<p>​      【注】一般使用在表单元素里。</p>
<p><strong>!IE8以下不兼容</strong></p>
<p>​      <code>document.querySelector()</code></p>
<p>​      返回值：一个元素节点，找到符合条件的第一个节点元素</p>
<p>​      <code>document.querySelectorAll()</code></p>
<p>​      返回值：一个伪数组</p>
<p>​      参数(上面两个)：字符串，CSS选择器格式字符串(就是CSS怎么写，这里就怎么写)。</p>
<p>例子（占位置，嘻嘻）：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>获取元素节点<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> aLis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span></span><br><span class="line"><span class="actionscript">            alert(aLis.length);<span class="comment">//使用起来和数组类似，一般情况，我们自己起名叫伪数组/类数组（非官方命名）</span></span></span><br><span class="line">            </span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oOl = <span class="built_in">document</span>.getElementById(<span class="string">"oli"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> aLis = oOl.getElementsByTagName(<span class="string">"li"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//获取ol下的li节点</span></span></span><br><span class="line">            alert(aLis.length);</span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; aLis.length;i++)&#123;</span></span><br><span class="line"><span class="actionscript">                aLis[i].style.backgroundColor = <span class="string">"red"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oUl = <span class="built_in">document</span>.getElementById(<span class="string">"uli"</span>)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> nodes = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; nodes.length;i++)&#123;</span></span><br><span class="line"><span class="actionscript">                nodes[i].style.backgroundColor = <span class="string">"red"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> nodes = <span class="built_in">document</span>.getElementsByName(<span class="string">"hello"</span>);</span></span><br><span class="line">            alert(nodes.length);</span><br><span class="line"><span class="actionscript">            <span class="comment">// var node = document.querySelector("#oli");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// node.style.backgroundColor = "#000";</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> node = <span class="built_in">document</span>.querySelectorAll(<span class="string">".box"</span>);</span></span><br><span class="line"><span class="actionscript">            node[<span class="number">1</span>].style.backgroundColor = <span class="string">"#000"</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"uli"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">name</span>=<span class="string">"hello"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"hello"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">name</span>=<span class="string">"hello"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">id</span>=<span class="string">"oli"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>类的静态成员</title>
    <url>/2020/08/10/%E7%B1%BB%E7%9A%84%E9%9D%99%E6%80%81%E6%88%90%E5%91%98/</url>
    <content><![CDATA[<h1 id="类的静态成员"><a href="#类的静态成员" class="headerlink" title="类的静态成员"></a>类的静态成员</h1><h2 id="静态数据成员"><a href="#静态数据成员" class="headerlink" title="静态数据成员"></a>静态数据成员</h2><p>教材截图：</p>
<p><img src="https://wx1.sbimg.cn/2020/08/10/o7tH6.png" alt="o7tH6.png"></p>
<p><strong>$</strong> <strong>静态数据成员具有静态生存期。</strong>由于静态数据成员不属于任何一个对象可以通过类名进行访问，一般的用法是<code>类名::标识符</code>。在类的定义中仅仅对静态数据成员进行引用性声明，必须在命名空间作用域的某个地方使用类名限定定义性声明，这时也可以进行初始化。例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//09类的静态数据成员 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		Point(<span class="keyword">int</span> x=<span class="number">0</span>, <span class="keyword">int</span> y=<span class="number">0</span>):x(x), y(y)&#123;</span><br><span class="line">            <span class="comment">//在构造函数中对count进行累加，所有对象共同维护同一个count</span></span><br><span class="line">			count++;</span><br><span class="line">		&#125;</span><br><span class="line">		Point(Point &amp;p)&#123;</span><br><span class="line">			x = p.x;</span><br><span class="line">			y = p.y;</span><br><span class="line">			count++;</span><br><span class="line">		&#125;</span><br><span class="line">		~Point()&#123;</span><br><span class="line">			count--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">showCount</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="keyword">int</span> x, y;</span><br><span class="line">		<span class="keyword">static</span> <span class="keyword">int</span> count;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Point::showCount</span><span class="params">()</span></span>&#123;			<span class="comment">//输出静态数据成员</span></span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"Object count = "</span>&lt;&lt;count&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Point::count = <span class="number">0</span>;	<span class="comment">//静态数据成员定义和初始化，使用类名限定</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="function">Point <span class="title">a</span><span class="params">(<span class="number">4</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line">	a.showCount();</span><br><span class="line">	</span><br><span class="line">    <span class="function">Point <span class="title">b</span><span class="params">(a)</span></span>;</span><br><span class="line">	b.showCount();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可是没有创建对象时，想要知道count的值怎么办？这就看静态成员函数了。</p>
<h2 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h2><p><strong>$</strong> 静态成员函数可以直接访问该类的静态数据和函数成员。而访问非静态成员，必须通过对象名。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">	...</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">showCount</span><span class="params">()</span></span>;<span class="comment">//非静态成员函数</span></span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="keyword">int</span> x, y;</span><br><span class="line">		<span class="keyword">static</span> <span class="keyword">int</span> count;</span><br><span class="line">&#125;; </span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">	Point::showCount();<span class="comment">//这是错误的,对于普通函数成员的调用必须通过对象名。</span></span><br><span class="line">    ...  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再请看</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">    	<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">(A a)</span></span>;</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	<span class="keyword">int</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">A::f</span><span class="params">(A a)</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x;		<span class="comment">//对x的引用是错误的</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;a.x;		<span class="comment">//正确</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以看到，通过静态成员访问非静态成员是相当麻烦的，一般情况下，它主要用来访问同一个类中的静态数据成员，维护对象之间共享的数据。</p>
<p><img src="https://wx1.sbimg.cn/2020/08/10/o7bNG.png" alt="o7bNG.png"></p>
<p><img src="https://wx2.sbimg.cn/2020/08/10/o7rkT.png" alt="o7rkT.png"></p>
<p>下面是一个完整的例子：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//09类的静态数据成员 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		Point(<span class="keyword">int</span> x=<span class="number">0</span>, <span class="keyword">int</span> y=<span class="number">0</span>):x(x), y(y)&#123;</span><br><span class="line">			count++;</span><br><span class="line">		&#125;</span><br><span class="line">		Point(Point &amp;p)&#123;</span><br><span class="line">			x = p.x;</span><br><span class="line">			y = p.y;</span><br><span class="line">			count++;</span><br><span class="line">		&#125;</span><br><span class="line">		~Point()&#123;</span><br><span class="line">			count--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showCount</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="keyword">int</span> x, y;</span><br><span class="line">		<span class="keyword">static</span> <span class="keyword">int</span> count;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Point::showCount</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;<span class="string">"Object count = "</span>&lt;&lt;count&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Point::count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	Point::showCount();<span class="comment">//不依赖任何对象，直接访问静态数据</span></span><br><span class="line">	<span class="function">Point <span class="title">a</span><span class="params">(<span class="number">4</span>, <span class="number">5</span>)</span></span>;</span><br><span class="line">	a.showCount();</span><br><span class="line">	<span class="function">Point <span class="title">b</span><span class="params">(a)</span></span>;</span><br><span class="line">	Point::showCount();</span><br><span class="line">	b.showCount();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<p><img src="https://wx1.sbimg.cn/2020/08/10/o7Osw.png" alt="o7Osw.png"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>友元</title>
    <url>/2020/08/10/%E5%8F%8B%E5%85%83/</url>
    <content><![CDATA[<h1 id="友元"><a href="#友元" class="headerlink" title="友元"></a>友元</h1><h2 id="友元-1"><a href="#友元-1" class="headerlink" title="友元"></a>友元</h2><p><strong>$</strong> <strong>友元关系提供了不同类或对象的成员函数之间、类的成员函数与一般函数之间进行数据共享的机制。</strong>通俗来说就是，友元关系就是一个类主动声明哪些其他类或函数时它的朋友，进而给它们提供对本类的访问特许。</p>
<h2 id="友元函数和友元类"><a href="#友元函数和友元类" class="headerlink" title="友元函数和友元类"></a>友元函数和友元类</h2><p>声明形式如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    ...</span><br><span class="line">        <span class="function"><span class="keyword">friend</span> <span class="keyword">int</span> <span class="title">somefunc</span><span class="params">(...)</span></span>;	<span class="comment">//友元函数声明</span></span><br><span class="line">    	<span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span>;</span>				<span class="comment">//声明A为SomeClass的友元类</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">   	...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>友元函数不仅可以是一个普通函数，也可以是另外一个类的成员函数。友元成员函数的使用和一般友元函数的使用基本相同，只是要通过相应的类或对象名来访问。</p>
<p>关于友元还有几点注意：</p>
<p><strong>1.友元关系是不能传递的</strong></p>
<p><strong>2.友元关系是单向的</strong></p>
<p><strong>3.友元关系是不被继承的</strong></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>外部变量和外部函数</title>
    <url>/2020/08/10/%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F%E5%92%8C%E5%A4%96%E9%83%A8%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="外部变量"><a href="#外部变量" class="headerlink" title="外部变量"></a>外部变量</h1><p>如果一个变量除了在定义它的源文件中可以使用外，还能被其他文件使用，那么就称这个变量是外部变量。命名空间作用域中定义的变量，默认情况下都是外部变量，但在其它文件中如果要使用这一变量，需要用<code>extern</code>关键字加以说明。</p>
<p>例子：</p>
<p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200810171423414.png" alt="image-20200810171423414"></p>
<p>外部变量是可以被多个源文件所共享的全局变量。</p>
<h1 id="外部函数"><a href="#外部函数" class="headerlink" title="外部函数"></a>外部函数</h1><p><img src="C:%5CUsers%5CAdministrator%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200810171717331.png" alt="image-20200810171717331"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>常字打头</title>
    <url>/2020/08/10/%E5%B8%B8%E5%AF%B9%E8%B1%A1/</url>
    <content><![CDATA[<h2 id="常对象"><a href="#常对象" class="headerlink" title="常对象"></a>常对象</h2><h2 id="常成员函数"><a href="#常成员函数" class="headerlink" title="常成员函数"></a>常成员函数</h2><h2 id="常数据成员"><a href="#常数据成员" class="headerlink" title="常数据成员"></a>常数据成员</h2><p>全都是声明时，加一个<code>const</code>关键字就可。一句话：不能赋值，只能并且必须初始化。</p>
<p>在数据成员类型前加一个 <code>mutable</code> 在常成员函数中就可以修改了</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="keyword">mutable</span> <span class="keyword">double</span> len;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h2 id="常引用"><a href="#常引用" class="headerlink" title="常引用"></a>常引用</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> 类型说明符 &amp;引用名</span><br></pre></td></tr></table></figure>

<p>按常引用传递参数</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>对象的生存周期</title>
    <url>/2020/08/10/%E5%AF%B9%E8%B1%A1%E7%9A%84%E7%94%9F%E5%AD%98%E5%91%A8%E6%9C%9F/</url>
    <content><![CDATA[<h1 id="对象的生存周期"><a href="#对象的生存周期" class="headerlink" title="对象的生存周期"></a>对象的生存周期</h1><h2 id="静态生存期"><a href="#静态生存期" class="headerlink" title="静态生存期"></a>静态生存期</h2><p><strong>如果对象的生存期与程序的运行期相同，则称它具有静态生存期。</strong>在命名空间声明的对象都是具有静态生存期的。如果要在函数内部的局部作用域中声明具有静态生存期的对象，则要使用关键字static。例如下列语句定义的变量i便是具有静态生存期的变量：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> i;</span><br></pre></td></tr></table></figure>

<p>局部作用域中静态变量的特点是，它并不会随着每次函数调用而产生一个副本，也不会随着函数返回而失效。也就是说当函数返回后，下一次调用时，该变量还会保留上一次的值，即使发生了递归调用也不会为该变量建立新的副本，该变量会在每次调用间共享。</p>
<p>在定义静态变量的同时也可为它赋初值，例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> i = <span class="number">5</span>;</span><br></pre></td></tr></table></figure>

<p>这表示i会被赋予5初始化，而非每次执行函数时都将i赋值为5。</p>
<p><strong>细节</strong>：<em>定义时未指定初值的基本类型静态生存期变量会被赋予0值初始化，而对于动态生存期变量，不指定初值则意味着初值不确定</em>。</p>
<h2 id="动态生存期"><a href="#动态生存期" class="headerlink" title="动态生存期"></a>动态生存期</h2><p>除了上述两种情况（命名空间和static关键字）</p>
<p><strong>局部生存期对象诞生于声明点，结束语声明所在的块执行完毕之时。</strong></p>
<p><strong>提示</strong>：类的成员对象也有各自的生存期。不用static修饰的成员对象，其生存期与它们所属对象的生存期保持一致。</p>
<p>一个例子：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clock</span>&#123;</span>		<span class="comment">//时钟类定义 </span></span><br><span class="line">	<span class="keyword">public</span>:			<span class="comment">//外部接口 </span></span><br><span class="line">		Clock():newH(<span class="number">0</span>), newM(<span class="number">0</span>), newS(<span class="number">0</span>)&#123;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">showTime</span><span class="params">()</span></span>&#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;newH&lt;&lt;<span class="string">":"</span>&lt;&lt;newM&lt;&lt;<span class="string">":"</span>&lt;&lt;newS&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">setTime</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> m, <span class="keyword">int</span> s)</span></span>&#123;	 <span class="comment">//三个形参均具有局部作用域 </span></span><br><span class="line">			newH = h;</span><br><span class="line">			newM = m;</span><br><span class="line">			newS = s;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">private</span>:</span><br><span class="line">		<span class="keyword">int</span> newH, newM, newS; </span><br><span class="line">&#125;; </span><br><span class="line">Clock globalClock;	<span class="comment">//具有命名空间作用域，静态生存期 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;			<span class="comment">//主函数 </span></span><br><span class="line">	globalClock.showTime();</span><br><span class="line">	globalClock.setTime(<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>);</span><br><span class="line">	globalClock.showTime();</span><br><span class="line">	</span><br><span class="line">	<span class="function">Clock <span class="title">myClock</span><span class="params">(globalClock)</span></span>;		<span class="comment">//声明具有块作用域的对象myClock </span></span><br><span class="line">	myClock.showTime();</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<p><img src="https://wx2.sbimg.cn/2020/08/10/o7eA7.png" alt="o7eA7.png"></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>标识符在作用域和可见性是一回事吗？有了初步了解</title>
    <url>/2020/08/10/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%9C%A8%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E5%8F%AF%E8%A7%81%E6%80%A7%E6%98%AF%E4%B8%80%E5%9B%9E%E4%BA%8B%E5%90%97%EF%BC%9F%E6%9C%89%E4%BA%86%E5%88%9D%E6%AD%A5%E4%BA%86%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="标识符在作用域和可见性是一回事吗？有了初步了解"><a href="#标识符在作用域和可见性是一回事吗？有了初步了解" class="headerlink" title="标识符在作用域和可见性是一回事吗？有了初步了解"></a>标识符在作用域和可见性是一回事吗？有了初步了解</h2><p><strong>$</strong> <strong>作用域</strong>：作用域是一个标识符在程序正文中有效的区域。</p>
<ol>
<li><p>函数原型作用域</p>
<p>​    函数原型作用域是C++程序中最小的作用域。在函数原型中一定要包含形参的类型说明。<strong>在函数原型声明时形式参数的作用范围就是函数原型的作用域。</strong>例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">area</span><span class="params">(<span class="keyword">double</span> radius)</span></span>;</span><br></pre></td></tr></table></figure>

<p>标识符radius的作用（或称有效）范围就在函数area形参列表的左右括号之间，在程序的其他地方不能引用这个标识符。因此标识符radius的作用域称为<strong>函数原型作用域</strong>。</p>
<p><em>me</em>：你可能会好奇，radius不是形参吗？在函数体里面不是可用吗？其实这里只是一个函数原型的形参列表，而不是函数实现的形参列表，当有函数实现的时候，函数体中就是下面要讲的局部作用域了。</p>
<p><strong>注意</strong>：由于函数原型的形参列表起作用的只是形参类型，标识符并不起作用，因此使允许省去的。但考虑到程序的可读性，通常还是要在函数原型声明时，给出形参标识符。</p>
</li>
<li><p>局部作用域（纯抄书，感觉解释很到位）</p>
<p>​    为了理解局部作用域，先来看一个例子。</p>
<p>​    <img src="https://wx2.sbimg.cn/2020/08/09/oqgKe.png" alt="oqgKe.png"></p>
<p>​    <strong>函数形参列表中形参的作用域，从形参的列表的声明处开始，到整个函数体结束之处为止。</strong>因此，形参a的作用域从a的声明处开始，到fun函数的结束处为止。<strong>函数体内声明的变量，其作用域从声明处开始，一直到声明所在的块结束的大括号为止。</strong>所谓块，就是一对大括号括起来的一段程序。例如函数体就是一个块，if后面的分支体又是一个较小的块。<strong>具有局部作用域的变量也称为局部变量。</strong></p>
</li>
<li><p>类作用域</p>
<p>​    类可以被看作一组有名成员的集合，类X的成员m具有类作用域，<strong>对m的访问方式有如下3种</strong>：</p>
<p>(1) <strong>如果在X的成员函数中没有声明同名的局部作用域标识符，那么在该函数内可以直接访问成员m</strong>。也就是说m在这样的函数中都起作用。</p>
<p>(2) <strong>通过表达式<code>x.m</code>或<code>X::m</code>。这正是程序中访问对象成员的最基本方法。<code>X::m</code>的方式用于访问类的静态成员。</strong><a href="https://dopphu.github.io/2020/08/10/%E7%B1%BB%E7%9A%84%E9%9D%99%E6%80%81%E6%88%90%E5%91%98/#more">关于类的静态成员</a></p>
<p>(3) <strong>通过<code>ptr-&gt;m</code>这样的表达式，其中<code>ptr</code>为指向一个 X 类的一个对象的指针。</strong></p>
</li>
<li><p>命名空间作用域</p>
<p>​    教材截图：</p>
<p><img src="https://wx2.sbimg.cn/2020/08/09/oqjbk.png" alt="oqjbk.png"></p>
<ol>
<li><p>命名空间的语法形式如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> 命名空间名 &#123;</span><br><span class="line">    命名空间的各种声明(函数声明、类声明、...)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>一个命名空间确定了一个命名空间作用域，<strong>凡是在该命名空间之内声明的、不属于前面所述各个作用域的标识符，都属于该命名空间作用域</strong>。在命名空间内部可以直接引用当前命名空间中声明的标识符，如果需要引用其他命名空间的标识符，则需要使用下面的语法：</p>
<p><code>命名空间名::标识符名</code></p>
<p>例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> SomeNs&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>&#123;</span>...&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//这样引用</span></span><br><span class="line">SomeNs::SomeClass obj1;</span><br></pre></td></tr></table></figure>

<p>有时，标识符前面总使用这样的命名空间限定会显得过于冗长，C++提供了using语句来解决，using语句有两种形式：</p>
<p><code>using 命名空间名::标识符名;</code>//暴露指定标识符</p>
<p><code>using namespace 命名空间名;</code>//暴露该命名空间所有标识符</p>
<p>事实上，C++标准库的所有标识符都被声明在std命名空间内，前面用到的<code>cin</code>、<code>cout</code>、<code>endl</code>等标识符皆是如此，因此，前面的程序都使用了<code>using namespace std;</code>。如果去掉这条语句，则引用相应的标识符需要使用<code>std::cin</code>、<code>std::cout</code>、<code>std::endl</code>这样的语法。</p>
<p><strong>命名空间也允许嵌套</strong>，例如：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> OuterNs&#123;</span><br><span class="line">    <span class="keyword">namespace</span> InnerNs&#123;</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>&#123;</span>...&#125;;<span class="comment">//类声明</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此外，两类特殊的命名空间：全局命名空间和匿名命名空间。全局命名空间是默认的命名空间，在显示声明的命名空间之外声明的标识符都在一个全局命名空间，声明方式如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    匿名命名空间内的各种声明&#123;函数声明、类声明、...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在包含多个源文件的工程中，<strong>匿名命名空间常常被用来屏蔽不希望暴露给其他源文件的标识符</strong>，这是因为每个源文件的匿名命名空间是彼此不同的，在一个源文件中没有办法访问其他文件的匿名命名空间。</p>
</li>
<li><p><strong>具有命名空间作用域的变量也称为全局变量。</strong></p>
</li>
</ol>
</li>
<li><p>可见性：</p>
<p>​    命名空间作用域 &gt; 类作用域 &gt; 局部作用域</p>
</li>
</ol>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>2022考研规划</title>
    <url>/2020/08/11/2022%E8%80%83%E7%A0%94%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<p><img src="https://wx2.sbimg.cn/2020/08/11/oUQzA.png" alt="oUQzA.png"></p>
<p><img src="https://wx1.sbimg.cn/2020/08/11/oUArV.png" alt="oUArV.png"></p>
<p><img src="https://wx2.sbimg.cn/2020/08/11/oURD7.png" alt="oURD7.png"></p>
<p>中国从来都不缺六点起十点回寝室的人。</p>
<p><img src="https://wx1.sbimg.cn/2020/08/11/oUdxO.png" alt="oUdxO.png"></p>
<h1 id="考研百科"><a href="#考研百科" class="headerlink" title="考研百科"></a>考研百科</h1><p>考研：全国硕士研究生统一招生考试</p>
<p>高考：普通高等学校招生全国统一考试</p>
<p><img src="https://wx2.sbimg.cn/2020/08/11/oUhme.png" alt="oUhme.png"></p>
<p>考研只能一个学校一个专业。</p>
<p>正在学习，突发事件的影响（突然来个语音），为了避免要考虑<strong>协调</strong>。→规划</p>
<p>考研年份的确定是看录取时间，而不是考试时间</p>
<p>考研的两个阶段：初试，复试。初试由国家统一组织，复试由招生单位自行组织。</p>
<table>
<thead>
<tr>
<th align="center">类别/阶段</th>
<th align="center">初试</th>
<th align="center">复试</th>
</tr>
</thead>
<tbody><tr>
<td align="center">组织方</td>
<td align="center">国家统一组织</td>
<td align="center">招生单位组织</td>
</tr>
<tr>
<td align="center">考查方式</td>
<td align="center">笔试</td>
<td align="center">笔试＋面试</td>
</tr>
<tr>
<td align="center">时间</td>
<td align="center">12月</td>
<td align="center">3-4月</td>
</tr>
</tbody></table>
<h2 id="初试方式分类"><a href="#初试方式分类" class="headerlink" title="初试方式分类"></a>初试方式分类</h2><p><img src="https://www.zx95.net/images/2020/08/11/image7fa449c5181cc431.png" alt="image7fa449c5181cc431.png"></p>
<p>成绩好推荐免试，单独考试和我们没有关系。</p>
<h2 id="考研初试考试科目"><a href="#考研初试考试科目" class="headerlink" title="考研初试考试科目"></a>考研初试考试科目</h2><p><img src="https://www.zx95.net/images/2020/08/11/image1f02d92cb5e94097.png" alt="image1f02d92cb5e94097.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image30cf348baf04c96e.png" alt="image30cf348baf04c96e.png"></p>
<h2 id="那么我考什么？搜索引擎进行搜索"><a href="#那么我考什么？搜索引擎进行搜索" class="headerlink" title="那么我考什么？搜索引擎进行搜索"></a>那么我考什么？搜索引擎进行搜索</h2><p><img src="https://www.zx95.net/images/2020/08/11/image09aed7fffd13740e.png" alt="image09aed7fffd13740e.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image0ed837e423a90c2c.png" alt="image0ed837e423a90c2c.png"></p>
<p><strong>最新招生目录为准！！！！！</strong></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image180e6bbdf87d3ca8.png" alt="image180e6bbdf87d3ca8.png"></p>
<p>数学是专业课一（考两天那个）。</p>
<p><img src="https://www.zx95.net/images/2020/08/11/image909a69950fb53a7c.png" alt="image909a69950fb53a7c.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image693cab42f6bfec3a.png" alt="image693cab42f6bfec3a.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image00c44fb38458afcd.png" alt="image00c44fb38458afcd.png"></p>
<p>是<strong>学力</strong>不是学历</p>
<p><img src="https://www.zx95.net/images/2020/08/11/imageb811f737598f0b60.png" alt="imageb811f737598f0b60.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image07ba8596676fab69.png" alt="image07ba8596676fab69.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/imagef4acc5da1f3fd40a.png" alt="imagef4acc5da1f3fd40a.png"></p>
<p>两个重要文件——<strong>招生简章</strong>和<strong>招生目录</strong></p>
<p><img src="https://www.zx95.net/images/2020/08/11/imagea2249b01eb133b5a.png" alt="imagea2249b01eb133b5a.png"></p>
<p>有的不招同等学力，有的招但是有限制</p>
<p><img src="https://www.zx95.net/images/2020/08/11/image3e7e91d7d9ebb98c.png" alt="image3e7e91d7d9ebb98c.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image739410c9c81332a1.png" alt="image739410c9c81332a1.png"></p>
<p>同等学历要打电话问学校是否符合标准，要有证明。</p>
<p>学医的专升本会有些不同</p>
<p>看政策：</p>
<p><img src="https://www.zx95.net/images/2020/08/11/image99dd594a1cd93127.png" alt="image99dd594a1cd93127.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image60cc48bda1a9e36a.png" alt="image60cc48bda1a9e36a.png"></p>
<p><a href="https://yz.chsi.com.cn/" target="_blank" rel="noopener">中国研究生招生信息网</a></p>
<p><img src="https://www.zx95.net/images/2020/08/11/imagefb4f4c3d27255fda.png" alt="imagefb4f4c3d27255fda.png"></p>
<p><strong>一科不过全军覆没</strong></p>
<p>34所自主划线高校</p>
<p><img src="https://www.zx95.net/images/2020/08/11/imagead0561c53635800e.png" alt="imagead0561c53635800e.png"></p>
<p>录取最低分。</p>
<h1 id="考研政策"><a href="#考研政策" class="headerlink" title="考研政策"></a>考研政策</h1><p>要注意有些专业是否不再招生，（比如违规招生，可能就不招了）</p>
<p><img src="https://www.zx95.net/images/2020/08/11/imaged8c32208c5ed75f8.png" alt="imaged8c32208c5ed75f8.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image1d3d369a5d4191fa.png" alt="image1d3d369a5d4191fa.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image12145e19a1abbad9.png" alt="image12145e19a1abbad9.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/image1c31dc59fe60f744.png" alt="image1c31dc59fe60f744.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/11/imageaea8fe35790db1f0.png" alt="imageaea8fe35790db1f0.png"></p>
<p><img src="https://www.zx95.net/images/2020/08/12/image-20200811205218297.png" alt="image-20200811205218297.png"></p>
<p>关注你想考学校的微信公众号和微博</p>
<p><img src="https://www.zx95.net/images/2020/08/11/image96d07e51f8a5ca9f.png" alt="image96d07e51f8a5ca9f.png"></p>
<p>标黄的和22年考研的没有关系，那是学长学姐的事儿。</p>
]]></content>
  </entry>
</search>
